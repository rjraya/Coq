DIGEST 8f8ad55db6e4a84a27dd5c1f9754a14d
FLF.Poly
R288:292 LF.Lists <> <> lib
ind 1170:1177 <> boollist
constr 1193:1200 <> bool_nil
constr 1206:1214 <> bool_cons
R1201:1201 LF.Poly <> boollist ind
R1221:1224 LF.Basics <> bool ind
R1232:1239 LF.Poly <> boollist ind
R1241:1241 LF.Poly <> boollist ind
ind 1714:1717 <> list
constr 1742:1744 <> nil
constr 1750:1753 <> cons
R1745:1745 LF.Poly <> list ind
R1768:1771 LF.Poly <> list ind
R1775:1775 LF.Poly <> list ind
R2665:2668 LF.Poly <> list ind
R3085:3087 LF.Poly <> nil constr
R3089:3091 Coq.Init.Datatypes <> nat ind
R3306:3309 LF.Poly <> cons constr
R3318:3320 LF.Poly <> nil constr
R3322:3324 Coq.Init.Datatypes <> nat ind
R3311:3313 Coq.Init.Datatypes <> nat ind
R3715:3717 LF.Poly <> nil constr
R3985:3988 LF.Poly <> cons constr
R4669:4672 LF.Poly <> cons constr
R4681:4684 LF.Poly <> cons constr
R4693:4695 LF.Poly <> nil constr
R4697:4699 Coq.Init.Datatypes <> nat ind
R4686:4688 Coq.Init.Datatypes <> nat ind
R4674:4676 Coq.Init.Datatypes <> nat ind
def 5052:5057 <> repeat
R5075:5075 LF.Poly <> X var
R5087:5089 Coq.Init.Datatypes <> nat ind
R5094:5097 LF.Poly <> list ind
R5099:5099 LF.Poly <> X var
R5112:5116 LF.Poly <> count var
R5132:5134 LF.Poly <> nil constr
R5136:5136 LF.Poly <> X var
R5142:5142 Coq.Init.Datatypes <> S constr
R5154:5157 LF.Poly <> cons constr
R5164:5169 LF.Poly <> repeat def
R5173:5173 LF.Poly <> x var
R5171:5171 LF.Poly <> X var
R5161:5161 LF.Poly <> x var
R5159:5159 LF.Poly <> X var
def 5340:5351 <> test_repeat1
R5371:5373 Coq.Init.Logic <> :type_scope:x_'='_x not
R5357:5362 LF.Poly <> repeat def
R5364:5366 Coq.Init.Datatypes <> nat ind
R5374:5377 LF.Poly <> cons constr
R5386:5389 LF.Poly <> cons constr
R5398:5400 LF.Poly <> nil constr
R5402:5404 Coq.Init.Datatypes <> nat ind
R5391:5393 Coq.Init.Datatypes <> nat ind
R5379:5381 Coq.Init.Datatypes <> nat ind
def 5564:5575 <> test_repeat2
R5600:5602 Coq.Init.Logic <> :type_scope:x_'='_x not
R5581:5586 LF.Poly <> repeat def
R5593:5597 LF.Basics <> false constr
R5588:5591 LF.Basics <> bool ind
R5603:5606 LF.Poly <> cons constr
R5620:5622 LF.Poly <> nil constr
R5624:5627 LF.Basics <> bool ind
R5613:5617 LF.Basics <> false constr
R5608:5611 LF.Basics <> bool ind
mod 5785:5797 <> MumbleGrumble
ind 5811:5816 MumbleGrumble mumble
constr 5832:5832 MumbleGrumble a
constr 5838:5838 MumbleGrumble b
constr 5867:5867 MumbleGrumble c
R5833:5833 LF.Poly <> mumble ind
R5845:5850 LF.Poly <> mumble ind
R5858:5860 Coq.Init.Datatypes <> nat ind
R5862:5862 LF.Poly <> mumble ind
R5868:5868 LF.Poly <> mumble ind
ind 5881:5887 MumbleGrumble grumble
constr 5912:5912 MumbleGrumble d
constr 5931:5931 MumbleGrumble e
R5919:5924 LF.Poly MumbleGrumble mumble ind
R5926:5926 LF.Poly <> grumble ind
R5940:5940 LF.Poly <> grumble ind
R6297:6309 LF.Poly MumbleGrumble <> mod
def 6364:6394 <> manual_grade_for_mumble_grumble
R6398:6403 Coq.Init.Datatypes <> option ind
R6409:6409 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R6406:6408 Coq.Init.Datatypes <> nat ind
R6410:6415 Coq.Strings.String <> string ind
R6421:6424 Coq.Init.Datatypes <> None constr
def 6712:6718 <> repeat'
R6732:6735 LF.Poly <> list ind
R6737:6737 LF.Poly <> X var
R6750:6754 LF.Poly <> count var
R6777:6779 LF.Poly <> nil constr
R6781:6781 LF.Poly <> X var
R6787:6787 Coq.Init.Datatypes <> S constr
R6799:6802 LF.Poly <> cons constr
R6809:6815 LF.Poly <> repeat' def
R6819:6819 LF.Poly <> x var
R6817:6817 LF.Poly <> X var
R6806:6806 LF.Poly <> x var
R6804:6804 LF.Poly <> X var
R6919:6925 LF.Poly <> repeat' def
R6981:6986 LF.Poly <> repeat def
def 9491:9498 <> repeat''
R9512:9515 LF.Poly <> list ind
R9517:9517 LF.Poly <> X var
R9530:9534 LF.Poly <> count var
R9557:9559 LF.Poly <> nil constr
R9567:9567 Coq.Init.Datatypes <> S constr
R9579:9582 LF.Poly <> cons constr
R9589:9596 LF.Poly <> repeat'' def
R9600:9600 LF.Poly <> x var
R9586:9586 LF.Poly <> x var
def 9926:9932 <> list123
R9939:9942 LF.Poly <> cons constr
R9951:9954 LF.Poly <> cons constr
R9963:9966 LF.Poly <> cons constr
R9975:9977 LF.Poly <> nil constr
R9979:9981 Coq.Init.Datatypes <> nat ind
R9968:9970 Coq.Init.Datatypes <> nat ind
R9956:9958 Coq.Init.Datatypes <> nat ind
R9944:9946 Coq.Init.Datatypes <> nat ind
def 10042:10049 <> list123'
R10056:10059 LF.Poly <> cons constr
R10066:10069 LF.Poly <> cons constr
R10076:10079 LF.Poly <> cons constr
R10086:10088 LF.Poly <> nil constr
R10709:10711 LF.Poly <> nil constr
R10709:10711 LF.Poly <> nil constr
R10728:10731 LF.Poly <> cons constr
R10728:10731 LF.Poly <> cons constr
R10752:10757 LF.Poly <> repeat def
R10752:10757 LF.Poly <> repeat def
def 10844:10852 <> list123''
R10857:10860 LF.Poly <> cons constr
R10865:10868 LF.Poly <> cons constr
R10873:10876 LF.Poly <> cons constr
R10880:10882 LF.Poly <> nil constr
def 11072:11080 <> repeat'''
R11098:11098 LF.Poly <> X var
R11110:11112 Coq.Init.Datatypes <> nat ind
R11117:11120 LF.Poly <> list ind
R11122:11122 LF.Poly <> X var
R11135:11139 LF.Poly <> count var
R11162:11164 LF.Poly <> nil constr
R11170:11170 Coq.Init.Datatypes <> S constr
R11182:11185 LF.Poly <> cons constr
R11190:11198 LF.Poly <> repeat''' def
R11200:11200 LF.Poly <> x var
R11187:11187 LF.Poly <> x var
ind 11799:11803 <> list'
constr 11828:11831 <> nil'
constr 11837:11841 <> cons'
R11832:11832 LF.Poly <> list' ind
R11856:11860 LF.Poly <> list' ind
R11862:11862 LF.Poly <> list' ind
def 12297:12299 <> app
R12321:12324 LF.Poly <> list ind
R12326:12326 LF.Poly <> X var
R12345:12348 LF.Poly <> list ind
R12350:12350 LF.Poly <> X var
R12364:12365 LF.Poly <> l1 var
R12376:12378 LF.Poly <> nil constr
R12388:12389 LF.Poly <> l2 var
R12395:12398 LF.Poly <> cons constr
R12407:12410 LF.Poly <> cons constr
R12415:12417 LF.Poly <> app def
R12421:12422 LF.Poly <> l2 var
def 12442:12444 <> rev
R12458:12461 LF.Poly <> list ind
R12463:12463 LF.Poly <> X var
R12468:12471 LF.Poly <> list ind
R12473:12473 LF.Poly <> X var
R12486:12486 LF.Poly <> l var
R12497:12499 LF.Poly <> nil constr
R12509:12511 LF.Poly <> nil constr
R12517:12520 LF.Poly <> cons constr
R12529:12531 LF.Poly <> app def
R12542:12545 LF.Poly <> cons constr
R12549:12551 LF.Poly <> nil constr
R12534:12536 LF.Poly <> rev def
def 12571:12576 <> length
R12594:12597 LF.Poly <> list ind
R12599:12599 LF.Poly <> X var
R12604:12606 Coq.Init.Datatypes <> nat ind
R12619:12619 LF.Poly <> l var
R12630:12632 LF.Poly <> nil constr
R12643:12646 LF.Poly <> cons constr
R12656:12656 Coq.Init.Datatypes <> S constr
R12659:12664 LF.Poly <> length def
def 12686:12694 <> test_rev1
R12725:12728 Coq.Init.Logic <> :type_scope:x_'='_x not
R12748:12748 Coq.Init.Logic <> :type_scope:x_'='_x not
R12700:12702 LF.Poly <> rev def
R12705:12708 LF.Poly <> cons constr
R12713:12716 LF.Poly <> cons constr
R12720:12722 LF.Poly <> nil constr
R12729:12732 LF.Poly <> cons constr
R12737:12740 LF.Poly <> cons constr
R12744:12746 LF.Poly <> nil constr
def 12786:12794 <> test_rev2
R12818:12820 Coq.Init.Logic <> :type_scope:x_'='_x not
R12799:12801 LF.Poly <> rev def
R12804:12807 LF.Poly <> cons constr
R12814:12816 LF.Poly <> nil constr
R12809:12812 LF.Basics <> true constr
R12821:12824 LF.Poly <> cons constr
R12831:12833 LF.Poly <> nil constr
R12826:12829 LF.Basics <> true constr
def 12871:12882 <> test_length1
R12922:12924 Coq.Init.Logic <> :type_scope:x_'='_x not
R12885:12890 LF.Poly <> length def
R12893:12896 LF.Poly <> cons constr
R12901:12904 LF.Poly <> cons constr
R12909:12912 LF.Poly <> cons constr
R12916:12918 LF.Poly <> nil constr
def 13398:13402 <> mynil
R13407:13409 LF.Poly <> nil constr
def 13976:13980 <> mynil
R13984:13987 LF.Poly <> list ind
R13989:13991 Coq.Init.Datatypes <> nat ind
R13996:13998 LF.Poly <> nil constr
R14127:14129 LF.Poly <> nil constr
def 14144:14149 <> mynil'
R14155:14157 LF.Poly <> nil constr
R14159:14161 Coq.Init.Datatypes <> nat ind
R14443:14446 LF.Poly <> cons constr
not 14430:14430 <> ::x_'::'_x
R14528:14530 LF.Poly <> nil constr
not 14519:14519 <> ::'['_']'
R14563:14566 LF.Poly <> cons constr
R14574:14577 LF.Poly <> cons constr
R14581:14582 LF.Poly <> ::'['_']' not
not 14542:14542 <> ::'['_x_';'_'..'_';'_x_']'
R14612:14614 LF.Poly <> app def
not 14599:14599 <> ::x_'++'_x
def 14747:14756 <> list123'''
R14761:14761 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14763:14764 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14766:14767 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14769:14769 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 15086:15094 <> app_nil_r
R15124:15127 LF.Poly <> list ind
R15129:15129 LF.Poly <> X var
R15141:15143 Coq.Init.Logic <> :type_scope:x_'='_x not
R15135:15138 LF.Poly <> ::x_'++'_x not
R15134:15134 LF.Poly <> l var
R15139:15140 LF.Poly <> ::'['_']' not
R15144:15144 LF.Poly <> l var
prf 15237:15245 <> app_assoc
R15265:15268 LF.Poly <> list ind
R15270:15270 LF.Poly <> A var
R15287:15289 Coq.Init.Logic <> :type_scope:x_'='_x not
R15277:15280 LF.Poly <> ::x_'++'_x not
R15276:15276 LF.Poly <> l var
R15282:15285 LF.Poly <> ::x_'++'_x not
R15281:15281 LF.Poly <> m var
R15286:15286 LF.Poly <> n var
R15290:15290 LF.Poly <> ::x_'++'_x not
R15297:15301 LF.Poly <> ::x_'++'_x not
R15292:15295 LF.Poly <> ::x_'++'_x not
R15291:15291 LF.Poly <> l var
R15296:15296 LF.Poly <> m var
R15302:15302 LF.Poly <> n var
prf 15406:15415 <> app_length
R15444:15447 LF.Poly <> list ind
R15449:15449 LF.Poly <> X var
R15472:15474 Coq.Init.Logic <> :type_scope:x_'='_x not
R15455:15460 LF.Poly <> length def
R15465:15468 LF.Poly <> ::x_'++'_x not
R15463:15464 LF.Poly <> l1 var
R15469:15470 LF.Poly <> l2 var
R15484:15486 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15475:15480 LF.Poly <> length def
R15482:15483 LF.Poly <> l1 var
R15487:15492 LF.Poly <> length def
R15494:15495 LF.Poly <> l2 var
prf 15739:15751 <> rev_app_distr
R15772:15775 LF.Poly <> list ind
R15777:15777 LF.Poly <> X var
R15797:15799 Coq.Init.Logic <> :type_scope:x_'='_x not
R15783:15785 LF.Poly <> rev def
R15790:15793 LF.Poly <> ::x_'++'_x not
R15788:15789 LF.Poly <> l1 var
R15794:15795 LF.Poly <> l2 var
R15806:15809 LF.Poly <> ::x_'++'_x not
R15800:15802 LF.Poly <> rev def
R15804:15805 LF.Poly <> l2 var
R15810:15812 LF.Poly <> rev def
R15814:15815 LF.Poly <> l1 var
R15871:15879 LF.Poly <> app_nil_r thm
R15871:15879 LF.Poly <> app_nil_r thm
R15871:15879 LF.Poly <> app_nil_r thm
R15939:15947 LF.Poly <> app_assoc thm
R15939:15947 LF.Poly <> app_assoc thm
R15939:15947 LF.Poly <> app_assoc thm
prf 15980:15993 <> rev_involutive
R16025:16028 LF.Poly <> list ind
R16030:16030 LF.Poly <> X var
R16046:16048 Coq.Init.Logic <> :type_scope:x_'='_x not
R16035:16037 LF.Poly <> rev def
R16040:16042 LF.Poly <> rev def
R16044:16044 LF.Poly <> l var
R16049:16049 LF.Poly <> l var
R16111:16123 LF.Poly <> rev_app_distr thm
R16111:16123 LF.Poly <> rev_app_distr thm
R16111:16123 LF.Poly <> rev_app_distr thm
ind 16461:16464 <> prod
constr 16491:16494 <> pair
R16511:16511 LF.Poly <> prod ind
R16524:16527 LF.Poly <> pair constr
R16524:16527 LF.Poly <> pair constr
R16674:16677 LF.Poly <> pair constr
not 16658:16658 <> ::'('_x_','_x_')'
R16813:16816 LF.Poly <> prod ind
not 16801:16801 <> :type_scope:x_'*'_x
def 17415:17417 <> fst
R17438:17440 LF.Poly <> :type_scope:x_'*'_x not
R17437:17437 LF.Poly <> X var
R17441:17441 LF.Poly <> Y var
R17446:17446 LF.Poly <> X var
R17459:17459 LF.Poly <> p var
R17470:17470 LF.Poly <> ::'('_x_','_x_')' not
R17472:17473 LF.Poly <> ::'('_x_','_x_')' not
R17475:17475 LF.Poly <> ::'('_x_','_x_')' not
def 17501:17503 <> snd
R17524:17526 LF.Poly <> :type_scope:x_'*'_x not
R17523:17523 LF.Poly <> X var
R17527:17527 LF.Poly <> Y var
R17532:17532 LF.Poly <> Y var
R17545:17545 LF.Poly <> p var
R17556:17556 LF.Poly <> ::'('_x_','_x_')' not
R17558:17559 LF.Poly <> ::'('_x_','_x_')' not
R17561:17561 LF.Poly <> ::'('_x_','_x_')' not
def 17808:17814 <> combine
R17835:17838 LF.Poly <> list ind
R17840:17840 LF.Poly <> X var
R17849:17852 LF.Poly <> list ind
R17854:17854 LF.Poly <> Y var
R17870:17873 LF.Poly <> list ind
R17877:17877 LF.Poly <> :type_scope:x_'*'_x not
R17876:17876 LF.Poly <> X var
R17878:17878 LF.Poly <> Y var
R17896:17897 LF.Poly <> ly var
R17892:17893 LF.Poly <> lx var
R17908:17909 LF.Poly <> ::'['_']' not
R17917:17918 LF.Poly <> ::'['_']' not
R17927:17928 LF.Poly <> ::'['_']' not
R17933:17934 LF.Poly <> ::'['_']' not
R17941:17944 LF.Poly <> ::x_'::'_x not
R17950:17953 LF.Poly <> ::x_'::'_x not
R17966:17970 LF.Poly <> ::x_'::'_x not
R17984:17984 LF.Poly <> ::x_'::'_x not
R17960:17960 LF.Poly <> ::'('_x_','_x_')' not
R17962:17963 LF.Poly <> ::'('_x_','_x_')' not
R17965:17965 LF.Poly <> ::'('_x_','_x_')' not
R17971:17977 LF.Poly <> combine def
R18340:18346 LF.Poly <> combine def
R18358:18364 LF.Poly <> combine def
R18372:18372 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18378:18378 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18384:18384 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18389:18389 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18394:18394 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18390:18393 LF.Basics <> true constr
R18385:18388 LF.Basics <> true constr
R18379:18383 LF.Basics <> false constr
R18373:18377 LF.Basics <> false constr
R18366:18366 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18368:18368 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18370:18370 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18741:18745 <> split
R18765:18768 LF.Poly <> list ind
R18772:18772 LF.Poly <> :type_scope:x_'*'_x not
R18771:18771 LF.Poly <> X var
R18773:18773 LF.Poly <> Y var
R18794:18794 LF.Poly <> :type_scope:x_'*'_x not
R18801:18805 LF.Poly <> :type_scope:x_'*'_x not
R18812:18812 LF.Poly <> :type_scope:x_'*'_x not
R18795:18798 LF.Poly <> list ind
R18800:18800 LF.Poly <> X var
R18806:18809 LF.Poly <> list ind
R18811:18811 LF.Poly <> Y var
R18825:18825 LF.Poly <> l var
R18836:18838 LF.Poly <> nil constr
R18843:18843 LF.Poly <> ::'('_x_','_x_')' not
R18847:18847 LF.Poly <> ::'('_x_','_x_')' not
R18851:18851 LF.Poly <> ::'('_x_','_x_')' not
R18844:18846 LF.Poly <> nil constr
R18848:18850 LF.Poly <> nil constr
R18862:18865 LF.Poly <> ::x_'::'_x not
R18857:18857 LF.Poly <> ::'('_x_','_x_')' not
R18859:18859 LF.Poly <> ::'('_x_','_x_')' not
R18861:18861 LF.Poly <> ::'('_x_','_x_')' not
R18872:18872 LF.Poly <> ::'('_x_','_x_')' not
R18891:18892 LF.Poly <> ::'('_x_','_x_')' not
R18911:18911 LF.Poly <> ::'('_x_','_x_')' not
R18874:18877 LF.Poly <> ::x_'::'_x not
R18878:18880 LF.Poly <> fst def
R18882:18886 LF.Poly <> split def
R18894:18897 LF.Poly <> ::x_'::'_x not
R18898:18900 LF.Poly <> snd def
R18902:18906 LF.Poly <> split def
def 18930:18939 <> test_split
R18971:18973 Coq.Init.Logic <> :type_scope:x_'='_x not
R18944:18948 LF.Poly <> split def
R18950:18950 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18960:18960 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18970:18970 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18961:18961 LF.Poly <> ::'('_x_','_x_')' not
R18963:18963 LF.Poly <> ::'('_x_','_x_')' not
R18969:18969 LF.Poly <> ::'('_x_','_x_')' not
R18964:18968 LF.Basics <> false constr
R18951:18951 LF.Poly <> ::'('_x_','_x_')' not
R18953:18953 LF.Poly <> ::'('_x_','_x_')' not
R18959:18959 LF.Poly <> ::'('_x_','_x_')' not
R18954:18958 LF.Basics <> false constr
R18974:18974 LF.Poly <> ::'('_x_','_x_')' not
R18980:18980 LF.Poly <> ::'('_x_','_x_')' not
R18994:18994 LF.Poly <> ::'('_x_','_x_')' not
R18975:18975 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18977:18977 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18979:18979 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18981:18981 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18987:18987 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18993:18993 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18988:18992 LF.Basics <> false constr
R18982:18986 LF.Basics <> false constr
prf 19031:19043 <> right_inverse
R19068:19071 LF.Poly <> list ind
R19075:19075 LF.Poly <> :type_scope:x_'*'_x not
R19074:19074 LF.Poly <> X var
R19076:19076 LF.Poly <> Y var
R19120:19122 Coq.Init.Logic <> :type_scope:x_'='_x not
R19081:19087 LF.Poly <> combine def
R19106:19108 LF.Poly <> snd def
R19111:19115 LF.Poly <> split def
R19117:19117 LF.Poly <> l var
R19090:19092 LF.Poly <> fst def
R19095:19099 LF.Poly <> split def
R19101:19101 LF.Poly <> l var
R19123:19123 LF.Poly <> l var
mod 19628:19643 <> OptionPlayground
ind 19657:19662 OptionPlayground option
constr 19687:19690 OptionPlayground Some
constr 19704:19707 OptionPlayground None
R19699:19699 LF.Poly <> option ind
R19708:19708 LF.Poly <> option ind
R19721:19724 LF.Poly OptionPlayground Some constr
R19721:19724 LF.Poly OptionPlayground Some constr
R19743:19746 LF.Poly OptionPlayground None constr
R19743:19746 LF.Poly OptionPlayground None constr
R19758:19773 LF.Poly OptionPlayground <> mod
def 19883:19891 <> nth_error
R19909:19912 LF.Poly <> list ind
R19914:19914 LF.Poly <> X var
R19922:19924 Coq.Init.Datatypes <> nat ind
R19948:19953 Coq.Init.Datatypes <> option ind
R19955:19955 LF.Poly <> X var
R19968:19968 LF.Poly <> l var
R19979:19980 LF.Poly <> ::'['_']' not
R19985:19988 Coq.Init.Datatypes <> None constr
R19995:19998 LF.Poly <> ::x_'::'_x not
R20009:20012 LF.Basics <> :nat_scope:x_'=?'_x not
R20008:20008 LF.Poly <> n var
R20013:20013 Coq.Init.Datatypes <> O constr
R20032:20040 LF.Poly <> nth_error def
R20046:20049 Coq.Init.Peano <> pred syndef
R20051:20051 LF.Poly <> n var
R20020:20023 Coq.Init.Datatypes <> Some constr
def 20070:20084 <> test_nth_error1
R20109:20111 Coq.Init.Logic <> :type_scope:x_'='_x not
R20088:20096 LF.Poly <> nth_error def
R20098:20098 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20100:20100 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20102:20102 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20104:20104 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20106:20106 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20112:20115 Coq.Init.Datatypes <> Some constr
def 20153:20167 <> test_nth_error2
R20192:20194 Coq.Init.Logic <> :type_scope:x_'='_x not
R20171:20179 LF.Poly <> nth_error def
R20181:20181 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20185:20185 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20189:20189 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20186:20186 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20188:20188 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20182:20182 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20184:20184 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20195:20198 Coq.Init.Datatypes <> Some constr
R20200:20200 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20202:20202 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20238:20252 <> test_nth_error3
R20274:20276 Coq.Init.Logic <> :type_scope:x_'='_x not
R20256:20264 LF.Poly <> nth_error def
R20266:20266 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20271:20271 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20267:20270 LF.Basics <> true constr
R20277:20280 Coq.Init.Datatypes <> None constr
def 20545:20552 <> hd_error
R20570:20573 LF.Poly <> list ind
R20575:20575 LF.Poly <> X var
R20580:20585 Coq.Init.Datatypes <> option ind
R20587:20587 LF.Poly <> X var
R20600:20600 LF.Poly <> l var
R20611:20613 LF.Poly <> nil constr
R20618:20621 Coq.Init.Datatypes <> None constr
R20628:20631 LF.Poly <> ::x_'::'_x not
R20638:20641 Coq.Init.Datatypes <> Some constr
R20781:20788 LF.Poly <> hd_error def
def 20800:20813 <> test_hd_error1
R20831:20833 Coq.Init.Logic <> :type_scope:x_'='_x not
R20817:20824 LF.Poly <> hd_error def
R20826:20826 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20828:20828 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20830:20830 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20834:20837 Coq.Init.Datatypes <> Some constr
def 20875:20888 <> test_hd_error2
R20911:20914 Coq.Init.Logic <> :type_scope:x_'='_x not
R20892:20899 LF.Poly <> hd_error def
R20902:20902 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20906:20906 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20910:20910 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20907:20907 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20909:20909 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20903:20903 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20905:20905 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20915:20918 Coq.Init.Datatypes <> Some constr
R20920:20920 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20922:20922 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21610:21619 <> doit3times
R21634:21635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21636:21636 LF.Poly <> X var
R21633:21633 LF.Poly <> X var
R21642:21642 LF.Poly <> X var
R21647:21647 LF.Poly <> X var
R21654:21654 LF.Poly <> f var
R21657:21657 LF.Poly <> f var
R21660:21660 LF.Poly <> f var
R21662:21662 LF.Poly <> n var
R21821:21830 LF.Poly <> doit3times def
def 21902:21916 <> test_doit3times
R21940:21942 Coq.Init.Logic <> :type_scope:x_'='_x not
R21919:21928 LF.Poly <> doit3times def
R21930:21937 LF.Basics <> minustwo def
def 21981:21996 <> test_doit3times'
R22019:22021 Coq.Init.Logic <> :type_scope:x_'='_x not
R21999:22008 LF.Poly <> doit3times def
R22015:22018 LF.Basics <> true constr
R22010:22013 LF.Basics <> negb def
R22022:22026 LF.Basics <> false constr
def 22417:22422 <> filter
R22441:22442 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22443:22446 LF.Basics <> bool ind
R22440:22440 LF.Poly <> X var
R22452:22455 LF.Poly <> list ind
R22457:22457 LF.Poly <> X var
R22479:22482 LF.Poly <> list ind
R22484:22484 LF.Poly <> X var
R22498:22498 LF.Poly <> l var
R22509:22510 LF.Poly <> ::'['_']' not
R22519:22520 LF.Poly <> ::'['_']' not
R22527:22530 LF.Poly <> ::x_'::'_x not
R22539:22542 LF.Poly <> test var
R22607:22612 LF.Poly <> filter def
R22614:22617 LF.Poly <> test var
R22552:22556 LF.Poly <> ::x_'::'_x not
R22570:22570 LF.Poly <> ::x_'::'_x not
R22557:22562 LF.Poly <> filter def
R22564:22567 LF.Poly <> test var
def 22798:22809 <> test_filter1
R22834:22836 Coq.Init.Logic <> :type_scope:x_'='_x not
R22812:22817 LF.Poly <> filter def
R22825:22825 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22827:22827 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22829:22829 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22831:22831 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22833:22833 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22819:22823 LF.Basics <> evenb def
R22837:22837 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22839:22839 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22841:22841 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22882:22892 <> length_is_1
R22910:22913 LF.Poly <> list ind
R22915:22915 LF.Poly <> X var
R22920:22923 LF.Basics <> bool ind
R22930:22930 LF.Basics <> :nat_scope:x_'=?'_x not
R22939:22943 LF.Basics <> :nat_scope:x_'=?'_x not
R22931:22936 LF.Poly <> length def
R22938:22938 LF.Poly <> l var
def 22956:22967 <> test_filter2
R23042:23046 Coq.Init.Logic <> :type_scope:x_'='_x not
R22974:22979 LF.Poly <> filter def
R23004:23005 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23012:23013 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23017:23018 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23022:23023 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23031:23032 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23035:23036 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23040:23041 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23037:23037 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23039:23039 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23033:23034 LF.Poly <> ::'['_']' not
R23024:23024 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23026:23026 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23028:23028 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23030:23030 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23019:23019 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23021:23021 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23014:23014 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23016:23016 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23006:23006 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23008:23009 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23011:23011 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22981:22991 LF.Poly <> length_is_1 def
R23047:23048 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23052:23053 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23057:23058 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23062:23063 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23059:23059 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23061:23061 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23054:23054 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23056:23056 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23049:23049 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23051:23051 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23222:23237 <> countoddmembers'
R23242:23245 LF.Poly <> list ind
R23247:23249 Coq.Init.Datatypes <> nat ind
R23254:23256 Coq.Init.Datatypes <> nat ind
R23263:23268 LF.Poly <> length def
R23271:23276 LF.Poly <> filter def
R23283:23283 LF.Poly <> l var
R23278:23281 LF.Basics <> oddb def
def 23296:23317 <> test_countoddmembers'1
R23352:23354 Coq.Init.Logic <> :type_scope:x_'='_x not
R23322:23337 LF.Poly <> countoddmembers' def
R23339:23339 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23341:23341 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23343:23343 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23345:23345 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23347:23347 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23349:23349 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23351:23351 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23392:23413 <> test_countoddmembers'2
R23442:23444 Coq.Init.Logic <> :type_scope:x_'='_x not
R23418:23433 LF.Poly <> countoddmembers' def
R23435:23435 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23437:23437 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23439:23439 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23441:23441 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23482:23503 <> test_countoddmembers'3
R23528:23530 Coq.Init.Logic <> :type_scope:x_'='_x not
R23508:23523 LF.Poly <> countoddmembers' def
R23525:23527 LF.Poly <> nil constr
def 24309:24322 <> test_anon_fun'
R24356:24358 Coq.Init.Logic <> :type_scope:x_'='_x not
R24327:24336 LF.Poly <> doit3times def
R24349:24351 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R24348:24348 LF.Poly <> n var
R24352:24352 LF.Poly <> n var
def 24599:24611 <> test_filter2'
R24701:24705 Coq.Init.Logic <> :type_scope:x_'='_x not
R24618:24623 LF.Poly <> filter def
R24663:24664 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24671:24672 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24676:24677 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24681:24682 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24690:24691 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24694:24695 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24699:24700 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24696:24696 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24698:24698 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24692:24693 LF.Poly <> ::'['_']' not
R24683:24683 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24685:24685 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24687:24687 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24689:24689 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24678:24678 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24680:24680 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24673:24673 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24675:24675 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24665:24665 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24667:24668 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24670:24670 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24635:24635 LF.Basics <> :nat_scope:x_'=?'_x not
R24644:24648 LF.Basics <> :nat_scope:x_'=?'_x not
R24636:24641 LF.Poly <> length def
R24643:24643 LF.Poly <> l var
R24706:24707 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24711:24712 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24716:24717 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24721:24722 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24718:24718 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24720:24720 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24713:24713 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24715:24715 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24708:24708 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24710:24710 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25033:25047 <> filter_even_gt7
R25054:25057 LF.Poly <> list ind
R25059:25061 Coq.Init.Datatypes <> nat ind
R25066:25069 LF.Poly <> list ind
R25071:25073 Coq.Init.Datatypes <> nat ind
R25080:25085 LF.Poly <> filter def
R25123:25123 LF.Poly <> l var
R25097:25100 LF.Basics <> andb def
R25114:25118 LF.Basics <> :nat_scope:x_'<=?'_x not
R25119:25119 LF.Poly <> e var
R25103:25107 LF.Basics <> evenb def
R25109:25109 LF.Poly <> e var
def 25135:25156 <> test_filter_even_gt7_1
R25197:25199 Coq.Init.Logic <> :type_scope:x_'='_x not
R25162:25176 LF.Poly <> filter_even_gt7 def
R25178:25178 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25180:25180 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25182:25182 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25184:25184 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25186:25186 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25189:25189 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25191:25191 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25194:25194 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25196:25196 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25200:25200 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25203:25203 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25206:25206 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25208:25208 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25245:25266 <> test_filter_even_gt7_2
R25302:25304 Coq.Init.Logic <> :type_scope:x_'='_x not
R25272:25286 LF.Poly <> filter_even_gt7 def
R25288:25288 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25290:25290 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25292:25292 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25294:25294 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25297:25297 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25301:25301 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25305:25306 LF.Poly <> ::'['_']' not
def 25974:25982 <> partition
R26025:26028 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26029:26032 LF.Basics <> bool ind
R26024:26024 LF.Poly <> X var
R26061:26064 LF.Poly <> list ind
R26066:26066 LF.Poly <> X var
R26096:26098 LF.Poly <> :type_scope:x_'*'_x not
R26090:26093 LF.Poly <> list ind
R26095:26095 LF.Poly <> X var
R26099:26102 LF.Poly <> list ind
R26104:26104 LF.Poly <> X var
R26111:26111 LF.Poly <> ::'('_x_','_x_')' not
R26125:26126 LF.Poly <> ::'('_x_','_x_')' not
R26160:26160 LF.Poly <> ::'('_x_','_x_')' not
R26112:26117 LF.Poly <> filter def
R26124:26124 LF.Poly <> l var
R26119:26122 LF.Poly <> test var
R26127:26132 LF.Poly <> filter def
R26159:26159 LF.Poly <> l var
R26144:26147 LF.Basics <> negb def
R26150:26153 LF.Poly <> test var
R26155:26155 LF.Poly <> p var
def 26173:26187 <> test_partition1
R26216:26218 Coq.Init.Logic <> :type_scope:x_'='_x not
R26190:26198 LF.Poly <> partition def
R26205:26205 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26207:26207 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26209:26209 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26211:26211 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26213:26213 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26215:26215 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26200:26203 LF.Basics <> oddb def
R26219:26219 LF.Poly <> ::'('_x_','_x_')' not
R26227:26228 LF.Poly <> ::'('_x_','_x_')' not
R26234:26234 LF.Poly <> ::'('_x_','_x_')' not
R26220:26220 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26222:26222 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26224:26224 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26226:26226 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26229:26229 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26231:26231 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26233:26233 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26270:26284 <> test_partition2
R26321:26323 Coq.Init.Logic <> :type_scope:x_'='_x not
R26287:26295 LF.Poly <> partition def
R26314:26314 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26316:26316 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26318:26318 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26320:26320 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26307:26311 LF.Basics <> false constr
R26324:26324 LF.Poly <> ::'('_x_','_x_')' not
R26327:26328 LF.Poly <> ::'('_x_','_x_')' not
R26336:26336 LF.Poly <> ::'('_x_','_x_')' not
R26325:26326 LF.Poly <> ::'['_']' not
R26329:26329 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26331:26331 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26333:26333 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26335:26335 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26532:26534 <> map
R26552:26553 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26554:26554 LF.Poly <> Y var
R26551:26551 LF.Poly <> X var
R26560:26563 LF.Poly <> list ind
R26565:26565 LF.Poly <> X var
R26571:26574 LF.Poly <> list ind
R26576:26576 LF.Poly <> Y var
R26590:26590 LF.Poly <> l var
R26601:26602 LF.Poly <> ::'['_']' not
R26611:26612 LF.Poly <> ::'['_']' not
R26619:26622 LF.Poly <> ::x_'::'_x not
R26628:26628 LF.Poly <> ::x_'::'_x not
R26632:26637 LF.Poly <> ::x_'::'_x not
R26645:26645 LF.Poly <> ::x_'::'_x not
R26629:26629 LF.Poly <> f var
R26638:26640 LF.Poly <> map def
R26642:26642 LF.Poly <> f var
def 26862:26870 <> test_map1
R26904:26906 Coq.Init.Logic <> :type_scope:x_'='_x not
R26873:26875 LF.Poly <> map def
R26897:26897 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26899:26899 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26901:26901 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26903:26903 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26887:26890 Coq.Init.Peano <> plus syndef
R26894:26894 LF.Poly <> x var
R26907:26907 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26909:26909 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26911:26911 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26913:26913 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27207:27215 <> test_map2
R27238:27240 Coq.Init.Logic <> :type_scope:x_'='_x not
R27220:27222 LF.Poly <> map def
R27229:27229 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27231:27231 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27233:27233 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27235:27235 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27237:27237 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27224:27227 LF.Basics <> oddb def
R27241:27241 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27247:27247 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27252:27252 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27258:27258 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27263:27263 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27259:27262 LF.Basics <> true constr
R27253:27257 LF.Basics <> false constr
R27248:27251 LF.Basics <> true constr
R27242:27246 LF.Basics <> false constr
def 27452:27460 <> test_map3
R27508:27512 Coq.Init.Logic <> :type_scope:x_'='_x not
R27467:27469 LF.Poly <> map def
R27499:27499 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27501:27501 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27503:27503 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27505:27505 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27507:27507 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27481:27481 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27489:27489 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27496:27496 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27490:27493 LF.Basics <> oddb def
R27495:27495 LF.Poly <> n var
R27482:27486 LF.Basics <> evenb def
R27488:27488 LF.Poly <> n var
R27513:27513 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27526:27526 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27539:27539 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27552:27552 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27565:27565 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27553:27553 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27559:27559 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27564:27564 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27560:27563 LF.Basics <> true constr
R27554:27558 LF.Basics <> false constr
R27540:27540 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27545:27545 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27551:27551 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27546:27550 LF.Basics <> false constr
R27541:27544 LF.Basics <> true constr
R27527:27527 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27533:27533 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27538:27538 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27534:27537 LF.Basics <> true constr
R27528:27532 LF.Basics <> false constr
R27514:27514 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27519:27519 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27525:27525 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27520:27524 LF.Basics <> false constr
R27515:27518 LF.Basics <> true constr
prf 27836:27842 <> map_app
R27870:27873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27874:27874 LF.Poly <> Y var
R27869:27869 LF.Poly <> X var
R27885:27888 LF.Poly <> list ind
R27890:27890 LF.Poly <> X var
R27910:27912 Coq.Init.Logic <> :type_scope:x_'='_x not
R27894:27896 LF.Poly <> map def
R27903:27906 LF.Poly <> ::x_'++'_x not
R27901:27902 LF.Poly <> l1 var
R27907:27908 LF.Poly <> l2 var
R27898:27898 LF.Poly <> f var
R27921:27924 LF.Poly <> ::x_'++'_x not
R27913:27915 LF.Poly <> map def
R27919:27920 LF.Poly <> l1 var
R27917:27917 LF.Poly <> f var
R27925:27927 LF.Poly <> map def
R27931:27932 LF.Poly <> l2 var
R27929:27929 LF.Poly <> f var
prf 28041:28047 <> map_rev
R28077:28080 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28081:28081 LF.Poly <> Y var
R28076:28076 LF.Poly <> X var
R28089:28092 LF.Poly <> list ind
R28094:28094 LF.Poly <> X var
R28113:28115 Coq.Init.Logic <> :type_scope:x_'='_x not
R28100:28102 LF.Poly <> map def
R28107:28109 LF.Poly <> rev def
R28111:28111 LF.Poly <> l var
R28104:28104 LF.Poly <> f var
R28116:28118 LF.Poly <> rev def
R28121:28123 LF.Poly <> map def
R28127:28127 LF.Poly <> l var
R28125:28125 LF.Poly <> f var
R28213:28219 LF.Poly <> map_app thm
R28213:28219 LF.Poly <> map_app thm
R28213:28219 LF.Poly <> map_app thm
def 28723:28730 <> flat_map
R28749:28752 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28753:28756 LF.Poly <> list ind
R28758:28758 LF.Poly <> Y var
R28748:28748 LF.Poly <> X var
R28765:28768 LF.Poly <> list ind
R28770:28770 LF.Poly <> X var
R28795:28798 LF.Poly <> list ind
R28800:28800 LF.Poly <> Y var
R28814:28814 LF.Poly <> l var
R28826:28828 LF.Poly <> nil constr
R28833:28835 LF.Poly <> nil constr
R28842:28845 LF.Poly <> ::x_'::'_x not
R28852:28852 LF.Poly <> ::x_'++'_x not
R28856:28860 LF.Poly <> ::x_'++'_x not
R28853:28853 LF.Poly <> f var
R28861:28868 LF.Poly <> flat_map def
R28870:28870 LF.Poly <> f var
def 28891:28904 <> test_flat_map1
R28944:28948 Coq.Init.Logic <> :type_scope:x_'='_x not
R28909:28916 LF.Poly <> flat_map def
R28937:28937 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28939:28939 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28941:28941 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28943:28943 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28928:28928 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28930:28930 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28932:28932 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28934:28934 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28933:28933 LF.Poly <> n var
R28931:28931 LF.Poly <> n var
R28929:28929 LF.Poly <> n var
R28949:28949 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28951:28952 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28954:28955 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28957:28958 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28960:28961 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28963:28964 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28966:28967 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28969:28970 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28972:28973 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28975:28975 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29143:29152 <> option_map
R29173:29176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29177:29177 LF.Poly <> Y var
R29172:29172 LF.Poly <> X var
R29186:29191 Coq.Init.Datatypes <> option ind
R29193:29193 LF.Poly <> X var
R29220:29225 Coq.Init.Datatypes <> option ind
R29227:29227 LF.Poly <> Y var
R29240:29241 LF.Poly <> xo var
R29254:29257 Coq.Init.Datatypes <> None constr
R29262:29265 Coq.Init.Datatypes <> None constr
R29273:29276 Coq.Init.Datatypes <> Some constr
R29283:29286 Coq.Init.Datatypes <> Some constr
R29289:29289 LF.Poly <> f var
def 30135:30138 <> fold
R30157:30158 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30160:30161 Coq.Init.Logic <> :type_scope:x_'->'_x not
R30162:30162 LF.Poly <> Y var
R30159:30159 LF.Poly <> Y var
R30156:30156 LF.Poly <> X var
R30169:30172 LF.Poly <> list ind
R30174:30174 LF.Poly <> X var
R30181:30181 LF.Poly <> Y var
R30211:30211 LF.Poly <> Y var
R30224:30224 LF.Poly <> l var
R30235:30237 LF.Poly <> nil constr
R30242:30242 LF.Poly <> b var
R30249:30252 LF.Poly <> ::x_'::'_x not
R30258:30258 LF.Poly <> f var
R30263:30266 LF.Poly <> fold def
R30272:30272 LF.Poly <> b var
R30268:30268 LF.Poly <> f var
R30747:30750 LF.Poly <> fold def
R30752:30755 LF.Basics <> andb def
def 30817:30829 <> fold_example1
R30856:30858 Coq.Init.Logic <> :type_scope:x_'='_x not
R30835:30838 LF.Poly <> fold def
R30845:30845 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30847:30847 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30849:30849 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30851:30851 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30853:30853 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30840:30843 Coq.Init.Peano <> mult syndef
def 30897:30909 <> fold_example2
R30952:30954 Coq.Init.Logic <> :type_scope:x_'='_x not
R30915:30918 LF.Poly <> fold def
R30948:30951 LF.Basics <> true constr
R30925:30925 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30930:30930 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30935:30935 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30941:30941 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30946:30946 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30942:30945 LF.Basics <> true constr
R30936:30940 LF.Basics <> false constr
R30931:30934 LF.Basics <> true constr
R30926:30929 LF.Basics <> true constr
R30920:30923 LF.Basics <> andb def
R30955:30959 LF.Basics <> false constr
def 30996:31008 <> fold_example3
R31045:31047 Coq.Init.Logic <> :type_scope:x_'='_x not
R31014:31017 LF.Poly <> fold def
R31043:31044 LF.Poly <> ::'['_']' not
R31024:31024 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31028:31028 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31031:31031 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31037:31037 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31041:31041 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31038:31038 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31040:31040 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31032:31032 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31034:31034 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31036:31036 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31029:31030 LF.Poly <> ::'['_']' not
R31025:31025 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31027:31027 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31019:31021 LF.Poly <> app def
R31048:31048 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31050:31050 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31052:31052 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31054:31054 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31056:31056 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31552:31588 <> manual_grade_for_fold_types_different
R31592:31597 Coq.Init.Datatypes <> option ind
R31603:31603 LF.Poly <> :type_scope:x_'*'_x not
R31600:31602 Coq.Init.Datatypes <> nat ind
R31604:31609 Coq.Strings.String <> string ind
R31615:31618 Coq.Init.Datatypes <> None constr
def 32168:32175 <> constfun
R32191:32191 LF.Poly <> X var
R32199:32200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32201:32201 LF.Poly <> X var
R32196:32198 Coq.Init.Datatypes <> nat ind
R32215:32217 Coq.Init.Datatypes <> nat ind
R32223:32223 LF.Poly <> x var
def 32238:32242 <> ftrue
R32247:32254 LF.Poly <> constfun def
R32256:32259 LF.Basics <> true constr
def 32271:32287 <> constfun_example1
R32298:32300 Coq.Init.Logic <> :type_scope:x_'='_x not
R32291:32295 LF.Poly <> ftrue def
R32301:32304 LF.Basics <> true constr
def 32341:32357 <> constfun_example2
R32376:32378 Coq.Init.Logic <> :type_scope:x_'='_x not
R32362:32369 LF.Poly <> constfun def
R32580:32583 Coq.Init.Peano <> plus syndef
def 33194:33198 <> plus3
R33203:33206 Coq.Init.Peano <> plus syndef
R33217:33221 LF.Poly <> plus3 def
def 33233:33242 <> test_plus3
R33256:33258 Coq.Init.Logic <> :type_scope:x_'='_x not
R33249:33253 LF.Poly <> plus3 def
def 33296:33306 <> test_plus3'
R33330:33332 Coq.Init.Logic <> :type_scope:x_'='_x not
R33312:33321 LF.Poly <> doit3times def
R33323:33327 LF.Poly <> plus3 def
def 33370:33381 <> test_plus3''
R33407:33409 Coq.Init.Logic <> :type_scope:x_'='_x not
R33386:33395 LF.Poly <> doit3times def
R33398:33401 Coq.Init.Peano <> plus syndef
mod 33550:33558 <> Exercises
def 33770:33780 Exercises fold_length
R33798:33801 LF.Poly <> list ind
R33803:33803 LF.Poly <> X var
R33808:33810 Coq.Init.Datatypes <> nat ind
R33817:33820 LF.Poly <> fold def
R33839:33839 LF.Poly <> l var
R33834:33834 Coq.Init.Datatypes <> S constr
R33836:33836 LF.Poly <> n var
def 33853:33869 Exercises test_fold_length1
R33892:33894 Coq.Init.Logic <> :type_scope:x_'='_x not
R33873:33883 LF.Poly Exercises fold_length def
R33885:33885 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33887:33887 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33889:33889 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33891:33891 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 34217:34235 Exercises fold_length_correct
R34253:34256 LF.Poly <> list ind
R34258:34258 LF.Poly <> X var
R34277:34279 Coq.Init.Logic <> :type_scope:x_'='_x not
R34264:34274 LF.Poly Exercises fold_length def
R34276:34276 LF.Poly <> l var
R34280:34285 LF.Poly <> length def
R34287:34287 LF.Poly <> l var
R34348:34358 LF.Poly Exercises fold_length def
R34374:34384 LF.Poly Exercises fold_length def
R34374:34384 LF.Poly Exercises fold_length def
def 34581:34588 Exercises fold_map
R34607:34610 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34611:34611 LF.Poly <> Y var
R34606:34606 LF.Poly <> X var
R34618:34621 LF.Poly <> list ind
R34623:34623 LF.Poly <> X var
R34628:34631 LF.Poly <> list ind
R34633:34633 LF.Poly <> Y var
R34640:34643 LF.Poly <> fold def
R34673:34675 LF.Poly <> nil constr
R34671:34671 LF.Poly <> l var
R34662:34665 LF.Poly <> ::x_'::'_x not
R34659:34659 LF.Poly <> f var
R34661:34661 LF.Poly <> x var
R34666:34668 LF.Poly <> acc var
def 34687:34701 Exercises test_fold_map_1
R34722:34724 Coq.Init.Logic <> :type_scope:x_'='_x not
R34704:34711 LF.Poly Exercises fold_map def
R34715:34715 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34717:34717 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34719:34719 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34721:34721 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34713:34713 Coq.Init.Datatypes <> S constr
R34725:34725 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34727:34727 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34729:34729 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34731:34731 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34748:34755 LF.Poly Exercises fold_map def
prf 35004:35019 Exercises fold_map_correct
R35050:35053 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35054:35054 LF.Poly <> Y var
R35049:35049 LF.Poly <> X var
R35061:35064 LF.Poly <> list ind
R35066:35066 LF.Poly <> X var
R35082:35084 Coq.Init.Logic <> :type_scope:x_'='_x not
R35070:35077 LF.Poly Exercises fold_map def
R35081:35081 LF.Poly <> l var
R35079:35079 LF.Poly <> f var
R35085:35087 LF.Poly <> map def
R35091:35091 LF.Poly <> l var
R35089:35089 LF.Poly <> f var
R35154:35161 LF.Poly Exercises fold_map def
R35177:35184 LF.Poly Exercises fold_map def
R35177:35184 LF.Poly Exercises fold_map def
def 35306:35330 Exercises manual_grade_for_fold_map
R35334:35339 Coq.Init.Datatypes <> option ind
R35345:35345 LF.Poly <> :type_scope:x_'*'_x not
R35342:35344 Coq.Init.Datatypes <> nat ind
R35346:35351 Coq.Strings.String <> string ind
R35357:35360 Coq.Init.Datatypes <> None constr
def 36174:36183 Exercises prod_curry
R36212:36215 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36216:36216 LF.Poly <> Z var
R36208:36210 LF.Poly <> :type_scope:x_'*'_x not
R36207:36207 LF.Poly <> X var
R36211:36211 LF.Poly <> Y var
R36224:36224 LF.Poly <> X var
R36232:36232 LF.Poly <> Y var
R36237:36237 LF.Poly <> Z var
R36242:36242 LF.Poly <> f var
R36244:36244 LF.Poly <> ::'('_x_','_x_')' not
R36246:36247 LF.Poly <> ::'('_x_','_x_')' not
R36249:36249 LF.Poly <> ::'('_x_','_x_')' not
R36245:36245 LF.Poly <> x var
R36248:36248 LF.Poly <> y var
def 36394:36405 Exercises prod_uncurry
R36430:36433 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36435:36438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36439:36439 LF.Poly <> Z var
R36434:36434 LF.Poly <> Y var
R36429:36429 LF.Poly <> X var
R36448:36450 LF.Poly <> :type_scope:x_'*'_x not
R36447:36447 LF.Poly <> X var
R36451:36451 LF.Poly <> Y var
R36456:36456 LF.Poly <> Z var
R36469:36469 LF.Poly <> p var
R36481:36481 LF.Poly <> ::'('_x_','_x_')' not
R36483:36483 LF.Poly <> ::'('_x_','_x_')' not
R36485:36485 LF.Poly <> ::'('_x_','_x_')' not
R36490:36490 LF.Poly <> f var
def 36643:36652 Exercises test_map1'
R36675:36677 Coq.Init.Logic <> :type_scope:x_'='_x not
R36655:36657 LF.Poly <> map def
R36668:36668 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36670:36670 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36672:36672 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36674:36674 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36660:36663 Coq.Init.Peano <> plus syndef
R36678:36678 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36680:36680 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36682:36682 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36684:36684 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R36854:36863 LF.Poly Exercises prod_curry def
R36873:36884 LF.Poly Exercises prod_uncurry def
prf 36896:36908 Exercises uncurry_curry
R36964:36967 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36969:36972 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36973:36973 LF.Poly <> Z var
R36968:36968 LF.Poly <> Y var
R36963:36963 LF.Poly <> X var
R37038:37040 Coq.Init.Logic <> :type_scope:x_'='_x not
R37007:37016 LF.Poly Exercises prod_curry def
R37037:37037 LF.Poly <> y var
R37035:37035 LF.Poly <> x var
R37019:37030 LF.Poly Exercises prod_uncurry def
R37032:37032 LF.Poly <> f var
R37041:37041 LF.Poly <> f var
R37045:37045 LF.Poly <> y var
R37043:37043 LF.Poly <> x var
R37064:37073 LF.Poly Exercises prod_curry def
R37083:37094 LF.Poly Exercises prod_uncurry def
prf 37124:37136 Exercises curry_uncurry
R37191:37191 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37197:37201 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37202:37202 LF.Poly <> Z var
R37193:37195 LF.Poly <> :type_scope:x_'*'_x not
R37192:37192 LF.Poly <> X var
R37196:37196 LF.Poly <> Y var
R37211:37213 LF.Poly <> :type_scope:x_'*'_x not
R37210:37210 LF.Poly <> X var
R37214:37214 LF.Poly <> Y var
R37249:37251 Coq.Init.Logic <> :type_scope:x_'='_x not
R37220:37231 LF.Poly Exercises prod_uncurry def
R37248:37248 LF.Poly <> p var
R37234:37243 LF.Poly Exercises prod_curry def
R37245:37245 LF.Poly <> f var
R37252:37252 LF.Poly <> f var
R37254:37254 LF.Poly <> p var
R37273:37282 LF.Poly Exercises prod_curry def
R37292:37303 LF.Poly Exercises prod_uncurry def
def 38116:38146 Exercises manual_grade_for_informal_proof
R38150:38155 Coq.Init.Datatypes <> option ind
R38161:38161 LF.Poly <> :type_scope:x_'*'_x not
R38158:38160 Coq.Init.Datatypes <> nat ind
R38162:38167 Coq.Strings.String <> string ind
R38173:38176 Coq.Init.Datatypes <> None constr
mod 38511:38516 <> Exercises.Church
def 38530:38533 Exercises.Church cnat
R38555:38555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38562:38566 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38568:38571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38572:38572 LF.Poly <> X var
R38567:38567 LF.Poly <> X var
R38557:38560 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38561:38561 LF.Poly <> X var
R38556:38556 LF.Poly <> X var
def 38728:38730 Exercises.Church one
R38734:38737 LF.Poly Exercises.Church cnat def
R38765:38768 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38769:38769 LF.Poly <> X var
R38764:38764 LF.Poly <> X var
R38777:38777 LF.Poly <> X var
R38783:38783 LF.Poly <> f var
R38785:38785 LF.Poly <> x var
def 38865:38867 Exercises.Church two
R38871:38874 LF.Poly Exercises.Church cnat def
R38902:38905 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38906:38906 LF.Poly <> X var
R38901:38901 LF.Poly <> X var
R38914:38914 LF.Poly <> X var
R38920:38920 LF.Poly <> f var
R38923:38923 LF.Poly <> f var
R38925:38925 LF.Poly <> x var
def 39105:39108 Exercises.Church zero
R39112:39115 LF.Poly Exercises.Church cnat def
R39143:39146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39147:39147 LF.Poly <> X var
R39142:39142 LF.Poly <> X var
R39155:39155 LF.Poly <> X var
R39161:39161 LF.Poly <> x var
def 39436:39440 Exercises.Church three
R39444:39447 LF.Poly Exercises.Church cnat def
R39453:39462 LF.Poly <> doit3times def
def 39844:39847 Exercises.Church succ
R39854:39857 LF.Poly Exercises.Church cnat def
R39862:39865 LF.Poly Exercises.Church cnat def
R39893:39896 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39897:39897 LF.Poly <> X var
R39892:39892 LF.Poly <> X var
R39905:39905 LF.Poly <> X var
R39911:39911 LF.Poly <> f var
R39914:39914 LF.Poly <> n var
R39920:39920 LF.Poly <> x var
R39918:39918 LF.Poly <> f var
R39916:39916 LF.Poly <> X var
def 39933:39938 Exercises.Church succ_1
R39951:39953 Coq.Init.Logic <> :type_scope:x_'='_x not
R39942:39945 LF.Poly Exercises.Church succ def
R39947:39950 LF.Poly Exercises.Church zero def
R39954:39956 LF.Poly Exercises.Church one def
def 39993:39998 Exercises.Church succ_2
R40010:40012 Coq.Init.Logic <> :type_scope:x_'='_x not
R40002:40005 LF.Poly Exercises.Church succ def
R40007:40009 LF.Poly Exercises.Church one def
R40013:40015 LF.Poly Exercises.Church two def
def 40052:40057 Exercises.Church succ_3
R40069:40071 Coq.Init.Logic <> :type_scope:x_'='_x not
R40061:40064 LF.Poly Exercises.Church succ def
R40066:40068 LF.Poly Exercises.Church two def
R40072:40076 LF.Poly Exercises.Church three def
def 40222:40225 Exercises.Church plus
R40234:40237 LF.Poly Exercises.Church cnat def
R40242:40245 LF.Poly Exercises.Church cnat def
R40273:40276 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40277:40277 LF.Poly <> X var
R40272:40272 LF.Poly <> X var
R40285:40285 LF.Poly <> X var
R40291:40291 LF.Poly <> n var
R40298:40298 LF.Poly <> m var
R40304:40304 LF.Poly <> x var
R40302:40302 LF.Poly <> f var
R40300:40300 LF.Poly <> X var
R40295:40295 LF.Poly <> f var
R40293:40293 LF.Poly <> X var
def 40317:40322 Exercises.Church plus_1
R40339:40341 Coq.Init.Logic <> :type_scope:x_'='_x not
R40326:40329 LF.Poly Exercises.Church plus def
R40336:40338 LF.Poly Exercises.Church one def
R40331:40334 LF.Poly Exercises.Church zero def
R40342:40344 LF.Poly Exercises.Church one def
def 40381:40386 Exercises.Church plus_2
R40404:40406 Coq.Init.Logic <> :type_scope:x_'='_x not
R40390:40393 LF.Poly Exercises.Church plus def
R40399:40403 LF.Poly Exercises.Church three def
R40395:40397 LF.Poly Exercises.Church two def
R40407:40410 LF.Poly Exercises.Church plus def
R40418:40420 LF.Poly Exercises.Church two def
R40412:40416 LF.Poly Exercises.Church three def
def 40457:40462 Exercises.Church plus_3
R40493:40495 Coq.Init.Logic <> :type_scope:x_'='_x not
R40468:40471 LF.Poly Exercises.Church plus def
R40488:40492 LF.Poly Exercises.Church three def
R40474:40477 LF.Poly Exercises.Church plus def
R40483:40485 LF.Poly Exercises.Church two def
R40479:40481 LF.Poly Exercises.Church two def
R40496:40499 LF.Poly Exercises.Church plus def
R40506:40509 LF.Poly Exercises.Church plus def
R40517:40521 LF.Poly Exercises.Church three def
R40511:40515 LF.Poly Exercises.Church three def
R40501:40503 LF.Poly Exercises.Church one def
def 40652:40655 Exercises.Church mult
R40664:40667 LF.Poly Exercises.Church cnat def
R40672:40675 LF.Poly Exercises.Church cnat def
R40703:40706 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40707:40707 LF.Poly <> X var
R40702:40702 LF.Poly <> X var
R40715:40715 LF.Poly <> X var
R40722:40722 LF.Poly <> n var
R40734:40734 LF.Poly <> x var
R40727:40727 LF.Poly <> m var
R40731:40731 LF.Poly <> f var
R40729:40729 LF.Poly <> X var
R40724:40724 LF.Poly <> X var
def 40747:40752 Exercises.Church mult_1
R40768:40770 Coq.Init.Logic <> :type_scope:x_'='_x not
R40756:40759 LF.Poly Exercises.Church mult def
R40765:40767 LF.Poly Exercises.Church one def
R40761:40763 LF.Poly Exercises.Church one def
R40771:40773 LF.Poly Exercises.Church one def
R40790:40792 LF.Poly Exercises.Church one def
R40802:40805 LF.Poly Exercises.Church mult def
def 40835:40840 Exercises.Church mult_2
R40872:40874 Coq.Init.Logic <> :type_scope:x_'='_x not
R40844:40847 LF.Poly Exercises.Church mult def
R40855:40858 LF.Poly Exercises.Church plus def
R40866:40870 LF.Poly Exercises.Church three def
R40860:40864 LF.Poly Exercises.Church three def
R40849:40852 LF.Poly Exercises.Church zero def
R40875:40878 LF.Poly Exercises.Church zero def
R40895:40899 LF.Poly Exercises.Church three def
R40909:40912 LF.Poly Exercises.Church zero def
R40922:40925 LF.Poly Exercises.Church mult def
def 40955:40960 Exercises.Church mult_3
R40978:40980 Coq.Init.Logic <> :type_scope:x_'='_x not
R40964:40967 LF.Poly Exercises.Church mult def
R40973:40977 LF.Poly Exercises.Church three def
R40969:40971 LF.Poly Exercises.Church two def
R40981:40984 LF.Poly Exercises.Church plus def
R40992:40996 LF.Poly Exercises.Church three def
R40986:40990 LF.Poly Exercises.Church three def
R41013:41017 LF.Poly Exercises.Church three def
R41027:41029 LF.Poly Exercises.Church two def
R41039:41042 LF.Poly Exercises.Church mult def
def 41437:41439 Exercises.Church exp
R41448:41451 LF.Poly Exercises.Church cnat def
R41456:41459 LF.Poly Exercises.Church cnat def
R41487:41490 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41491:41491 LF.Poly <> X var
R41486:41486 LF.Poly <> X var
R41499:41499 LF.Poly <> X var
R41507:41507 LF.Poly <> m var
R41524:41524 LF.Poly <> f var
R41519:41519 LF.Poly <> n var
R41521:41521 LF.Poly <> X var
R41511:41514 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41515:41515 LF.Poly <> X var
R41510:41510 LF.Poly <> X var
R41527:41527 LF.Poly <> x var
def 41539:41543 Exercises.Church exp_1
R41558:41560 Coq.Init.Logic <> :type_scope:x_'='_x not
R41547:41549 LF.Poly Exercises.Church exp def
R41555:41557 LF.Poly Exercises.Church two def
R41551:41553 LF.Poly Exercises.Church two def
R41561:41564 LF.Poly Exercises.Church plus def
R41570:41572 LF.Poly Exercises.Church two def
R41566:41568 LF.Poly Exercises.Church two def
R41589:41591 LF.Poly Exercises.Church exp def
R41601:41603 LF.Poly Exercises.Church two def
R41613:41616 LF.Poly Exercises.Church plus def
def 41647:41651 Exercises.Church exp_2
R41669:41671 Coq.Init.Logic <> :type_scope:x_'='_x not
R41655:41657 LF.Poly Exercises.Church exp def
R41665:41668 LF.Poly Exercises.Church zero def
R41659:41663 LF.Poly Exercises.Church three def
R41672:41674 LF.Poly Exercises.Church one def
R41691:41693 LF.Poly Exercises.Church exp def
R41703:41707 LF.Poly Exercises.Church three def
R41717:41720 LF.Poly Exercises.Church zero def
R41730:41732 LF.Poly Exercises.Church one def
R41742:41744 LF.Poly Exercises.Church exp def
def 41775:41779 Exercises.Church exp_3
R41796:41798 Coq.Init.Logic <> :type_scope:x_'='_x not
R41783:41785 LF.Poly Exercises.Church exp def
R41793:41795 LF.Poly Exercises.Church two def
R41787:41791 LF.Poly Exercises.Church three def
R41799:41802 LF.Poly Exercises.Church plus def
R41830:41832 LF.Poly Exercises.Church one def
R41805:41808 LF.Poly Exercises.Church mult def
R41815:41818 LF.Poly Exercises.Church mult def
R41824:41826 LF.Poly Exercises.Church two def
R41820:41822 LF.Poly Exercises.Church two def
R41810:41812 LF.Poly Exercises.Church two def
R41849:41851 LF.Poly Exercises.Church exp def
R41861:41863 LF.Poly Exercises.Church two def
R41873:41876 LF.Poly Exercises.Church plus def
R41886:41888 LF.Poly Exercises.Church one def
R41926:41931 LF.Poly Exercises.Church <> mod
R41939:41947 LF.Poly Exercises <> mod
