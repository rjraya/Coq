DIGEST d0d3bfa1830c36c7ef6a7fedabe41b37
FLF.Tactics
R666:669 LF.Poly <> <> lib
prf 945:950 <> silly1
R972:974 Coq.Init.Datatypes <> nat ind
R988:997 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1011:1019 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1025:1027 Coq.Init.Logic <> :type_scope:x_'='_x not
R1020:1020 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1022:1022 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1024:1024 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1023:1023 LF.Tactics <> o var
R1021:1021 LF.Tactics <> n var
R1028:1028 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1030:1030 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1032:1032 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1031:1031 LF.Tactics <> p var
R1029:1029 LF.Tactics <> m var
R1003:1005 Coq.Init.Logic <> :type_scope:x_'='_x not
R998:998 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1000:1000 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1002:1002 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1001:1001 LF.Tactics <> o var
R999:999 LF.Tactics <> n var
R1006:1006 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1008:1008 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1010:1010 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1009:1009 LF.Tactics <> p var
R1007:1007 LF.Tactics <> n var
R984:986 Coq.Init.Logic <> :type_scope:x_'='_x not
R983:983 LF.Tactics <> n var
R987:987 LF.Tactics <> m var
prf 1556:1561 <> silly2
R1583:1585 Coq.Init.Datatypes <> nat ind
R1599:1608 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1609:1609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1652:1661 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1667:1669 Coq.Init.Logic <> :type_scope:x_'='_x not
R1662:1662 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1664:1664 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1666:1666 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1665:1665 LF.Tactics <> o var
R1663:1663 LF.Tactics <> n var
R1670:1670 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1672:1672 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1674:1674 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1673:1673 LF.Tactics <> p var
R1671:1671 LF.Tactics <> m var
R1624:1626 Coq.Init.Datatypes <> nat ind
R1635:1638 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1644:1646 Coq.Init.Logic <> :type_scope:x_'='_x not
R1639:1639 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1641:1641 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1643:1643 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1642:1642 LF.Tactics <> o var
R1640:1640 LF.Tactics <> q var
R1647:1647 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1649:1649 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1651:1651 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1650:1650 LF.Tactics <> p var
R1648:1648 LF.Tactics <> r var
R1631:1633 Coq.Init.Logic <> :type_scope:x_'='_x not
R1630:1630 LF.Tactics <> q var
R1634:1634 LF.Tactics <> r var
R1595:1597 Coq.Init.Logic <> :type_scope:x_'='_x not
R1594:1594 LF.Tactics <> n var
R1598:1598 LF.Tactics <> m var
prf 2185:2191 <> silly2a
R2209:2211 Coq.Init.Datatypes <> nat ind
R2233:2242 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2243:2243 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2290:2299 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2303:2305 Coq.Init.Logic <> :type_scope:x_'='_x not
R2300:2300 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2302:2302 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2301:2301 LF.Tactics <> n var
R2306:2306 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2308:2308 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2307:2307 LF.Tactics <> m var
R2258:2260 Coq.Init.Datatypes <> nat ind
R2277:2280 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2284:2286 Coq.Init.Logic <> :type_scope:x_'='_x not
R2281:2281 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2283:2283 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2282:2282 LF.Tactics <> q var
R2287:2287 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2289:2289 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2288:2288 LF.Tactics <> r var
R2269:2271 Coq.Init.Logic <> :type_scope:x_'='_x not
R2264:2264 LF.Poly <> ::'('_x_','_x_')' not
R2266:2266 LF.Poly <> ::'('_x_','_x_')' not
R2268:2268 LF.Poly <> ::'('_x_','_x_')' not
R2265:2265 LF.Tactics <> q var
R2267:2267 LF.Tactics <> q var
R2272:2272 LF.Poly <> ::'('_x_','_x_')' not
R2274:2274 LF.Poly <> ::'('_x_','_x_')' not
R2276:2276 LF.Poly <> ::'('_x_','_x_')' not
R2273:2273 LF.Tactics <> r var
R2275:2275 LF.Tactics <> r var
R2225:2227 Coq.Init.Logic <> :type_scope:x_'='_x not
R2220:2220 LF.Poly <> ::'('_x_','_x_')' not
R2222:2222 LF.Poly <> ::'('_x_','_x_')' not
R2224:2224 LF.Poly <> ::'('_x_','_x_')' not
R2221:2221 LF.Tactics <> n var
R2223:2223 LF.Tactics <> n var
R2228:2228 LF.Poly <> ::'('_x_','_x_')' not
R2230:2230 LF.Poly <> ::'('_x_','_x_')' not
R2232:2232 LF.Poly <> ::'('_x_','_x_')' not
R2229:2229 LF.Tactics <> m var
R2231:2231 LF.Tactics <> m var
prf 2500:2507 <> silly_ex
R2516:2516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2562:2571 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2585:2593 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2601:2603 Coq.Init.Logic <> :type_scope:x_'='_x not
R2594:2598 LF.Basics <> evenb def
R2604:2607 LF.Basics <> true constr
R2578:2580 Coq.Init.Logic <> :type_scope:x_'='_x not
R2572:2575 LF.Basics <> oddb def
R2581:2584 LF.Basics <> true constr
R2541:2544 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2555:2557 Coq.Init.Logic <> :type_scope:x_'='_x not
R2545:2548 LF.Basics <> oddb def
R2551:2551 Coq.Init.Datatypes <> S constr
R2553:2553 LF.Tactics <> n var
R2558:2561 LF.Basics <> true constr
R2534:2536 Coq.Init.Logic <> :type_scope:x_'='_x not
R2527:2531 LF.Basics <> evenb def
R2533:2533 LF.Tactics <> n var
R2537:2540 LF.Basics <> true constr
prf 2881:2895 <> silly3_firsttry
R2911:2913 Coq.Init.Datatypes <> nat ind
R2937:2946 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2961:2963 Coq.Init.Logic <> :type_scope:x_'='_x not
R2947:2947 LF.Basics <> :nat_scope:x_'=?'_x not
R2955:2959 LF.Basics <> :nat_scope:x_'=?'_x not
R2948:2948 Coq.Init.Datatypes <> S constr
R2951:2951 Coq.Init.Datatypes <> S constr
R2953:2953 LF.Tactics <> n var
R2964:2967 LF.Basics <> true constr
R2926:2929 Coq.Init.Logic <> :type_scope:x_'='_x not
R2936:2936 Coq.Init.Logic <> :type_scope:x_'='_x not
R2922:2925 LF.Basics <> true constr
R2931:2934 LF.Basics <> :nat_scope:x_'=?'_x not
R2930:2930 LF.Tactics <> n var
prf 3518:3530 <> rev_exercise1
R3549:3552 LF.Poly <> list ind
R3554:3556 Coq.Init.Datatypes <> nat ind
R3575:3583 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3586:3588 Coq.Init.Logic <> :type_scope:x_'='_x not
R3584:3585 LF.Tactics <> l' var
R3589:3591 LF.Poly <> rev def
R3593:3593 LF.Tactics <> l var
R3566:3568 Coq.Init.Logic <> :type_scope:x_'='_x not
R3565:3565 LF.Tactics <> l var
R3569:3571 LF.Poly <> rev def
R3573:3574 LF.Tactics <> l' var
R3642:3644 LF.Poly <> rev def
R3667:3680 LF.Poly <> rev_involutive thm
R3667:3680 LF.Poly <> rev_involutive thm
def 4312:4327 <> trans_eq_example
R4353:4355 Coq.Init.Datatypes <> nat ind
R4377:4385 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4399:4407 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4413:4415 Coq.Init.Logic <> :type_scope:x_'='_x not
R4408:4408 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4410:4410 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4412:4412 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4411:4411 LF.Tactics <> b var
R4409:4409 LF.Tactics <> a var
R4416:4416 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4418:4418 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4420:4420 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4419:4419 LF.Tactics <> f var
R4417:4417 LF.Tactics <> e var
R4391:4393 Coq.Init.Logic <> :type_scope:x_'='_x not
R4386:4386 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4388:4388 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4390:4390 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4389:4389 LF.Tactics <> d var
R4387:4387 LF.Tactics <> c var
R4394:4394 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4396:4396 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4398:4398 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4397:4397 LF.Tactics <> f var
R4395:4395 LF.Tactics <> e var
R4369:4371 Coq.Init.Logic <> :type_scope:x_'='_x not
R4364:4364 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4366:4366 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4368:4368 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4367:4367 LF.Tactics <> b var
R4365:4365 LF.Tactics <> a var
R4372:4372 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4374:4374 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4376:4376 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4375:4375 LF.Tactics <> d var
R4373:4373 LF.Tactics <> c var
prf 4677:4684 <> trans_eq
R4713:4713 LF.Tactics <> X var
R4724:4727 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4733:4736 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4738:4740 Coq.Init.Logic <> :type_scope:x_'='_x not
R4737:4737 LF.Tactics <> n var
R4741:4741 LF.Tactics <> o var
R4729:4731 Coq.Init.Logic <> :type_scope:x_'='_x not
R4728:4728 LF.Tactics <> m var
R4732:4732 LF.Tactics <> o var
R4720:4722 Coq.Init.Logic <> :type_scope:x_'='_x not
R4719:4719 LF.Tactics <> n var
R4723:4723 LF.Tactics <> m var
def 4996:5012 <> trans_eq_example'
R5038:5040 Coq.Init.Datatypes <> nat ind
R5062:5070 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5084:5092 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5098:5100 Coq.Init.Logic <> :type_scope:x_'='_x not
R5093:5093 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5095:5095 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5097:5097 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5096:5096 LF.Tactics <> b var
R5094:5094 LF.Tactics <> a var
R5101:5101 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5103:5103 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5105:5105 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5104:5104 LF.Tactics <> f var
R5102:5102 LF.Tactics <> e var
R5076:5078 Coq.Init.Logic <> :type_scope:x_'='_x not
R5071:5071 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5073:5073 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5075:5075 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5074:5074 LF.Tactics <> d var
R5072:5072 LF.Tactics <> c var
R5079:5079 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5081:5081 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5083:5083 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5082:5082 LF.Tactics <> f var
R5080:5080 LF.Tactics <> e var
R5054:5056 Coq.Init.Logic <> :type_scope:x_'='_x not
R5049:5049 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5051:5051 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5053:5053 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5052:5052 LF.Tactics <> b var
R5050:5050 LF.Tactics <> a var
R5057:5057 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5059:5059 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5061:5061 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5060:5060 LF.Tactics <> d var
R5058:5058 LF.Tactics <> c var
R5576:5576 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5578:5578 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5580:5580 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5558:5565 LF.Tactics <> trans_eq thm
R5576:5576 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5578:5578 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5580:5580 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5558:5565 LF.Tactics <> trans_eq thm
def 5922:5938 <> trans_eq_exercise
R5960:5962 Coq.Init.Datatypes <> nat ind
R5987:5995 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6007:6015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6016:6016 Coq.Init.Logic <> :type_scope:x_'='_x not
R6022:6026 Coq.Init.Logic <> :type_scope:x_'='_x not
R6037:6037 Coq.Init.Logic <> :type_scope:x_'='_x not
R6018:6020 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6017:6017 LF.Tactics <> n var
R6021:6021 LF.Tactics <> p var
R6027:6034 LF.Basics <> minustwo def
R6036:6036 LF.Tactics <> o var
R5996:5996 Coq.Init.Logic <> :type_scope:x_'='_x not
R6002:6005 Coq.Init.Logic <> :type_scope:x_'='_x not
R5998:6000 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5997:5997 LF.Tactics <> n var
R6001:6001 LF.Tactics <> p var
R6006:6006 LF.Tactics <> m var
R5972:5975 Coq.Init.Logic <> :type_scope:x_'='_x not
R5986:5986 Coq.Init.Logic <> :type_scope:x_'='_x not
R5971:5971 LF.Tactics <> m var
R5976:5983 LF.Basics <> minustwo def
R5985:5985 LF.Tactics <> o var
R6080:6087 LF.Tactics <> trans_eq thm
R6080:6087 LF.Tactics <> trans_eq thm
prf 7553:7563 <> S_injective
R7581:7583 Coq.Init.Datatypes <> nat ind
R7598:7603 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7605:7607 Coq.Init.Logic <> :type_scope:x_'='_x not
R7604:7604 LF.Tactics <> n var
R7608:7608 LF.Tactics <> m var
R7592:7594 Coq.Init.Logic <> :type_scope:x_'='_x not
R7589:7589 Coq.Init.Datatypes <> S constr
R7591:7591 LF.Tactics <> n var
R7595:7595 Coq.Init.Datatypes <> S constr
R7597:7597 LF.Tactics <> m var
R7650:7652 Coq.Init.Logic <> :type_scope:x_'='_x not
R7653:7656 Coq.Init.Peano <> pred syndef
R7659:7659 Coq.Init.Datatypes <> S constr
R7650:7652 Coq.Init.Logic <> :type_scope:x_'='_x not
R7653:7656 Coq.Init.Peano <> pred syndef
R7659:7659 Coq.Init.Datatypes <> S constr
prf 8161:8172 <> S_injective'
R8190:8192 Coq.Init.Datatypes <> nat ind
R8207:8212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8214:8216 Coq.Init.Logic <> :type_scope:x_'='_x not
R8213:8213 LF.Tactics <> n var
R8217:8217 LF.Tactics <> m var
R8201:8203 Coq.Init.Logic <> :type_scope:x_'='_x not
R8198:8198 Coq.Init.Datatypes <> S constr
R8200:8200 LF.Tactics <> n var
R8204:8204 Coq.Init.Datatypes <> S constr
R8206:8206 LF.Tactics <> m var
prf 8686:8698 <> injection_ex1
R8718:8720 Coq.Init.Datatypes <> nat ind
R8741:8746 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8750:8752 Coq.Init.Logic <> :type_scope:x_'='_x not
R8747:8747 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8749:8749 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8748:8748 LF.Tactics <> n var
R8753:8753 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8755:8755 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8754:8754 LF.Tactics <> m var
R8732:8734 Coq.Init.Logic <> :type_scope:x_'='_x not
R8726:8726 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8728:8729 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8731:8731 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8730:8730 LF.Tactics <> m var
R8727:8727 LF.Tactics <> n var
R8735:8735 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8737:8738 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8740:8740 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8739:8739 LF.Tactics <> o var
R8736:8736 LF.Tactics <> o var
prf 8998:9010 <> injection_ex2
R9028:9030 Coq.Init.Datatypes <> nat ind
R9045:9050 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9052:9054 Coq.Init.Logic <> :type_scope:x_'='_x not
R9051:9051 LF.Tactics <> n var
R9055:9055 LF.Tactics <> m var
R9039:9041 Coq.Init.Logic <> :type_scope:x_'='_x not
R9036:9036 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9038:9038 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9037:9037 LF.Tactics <> n var
R9042:9042 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9044:9044 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R9043:9043 LF.Tactics <> m var
def 9201:9213 <> injection_ex3
R9244:9244 LF.Tactics <> X var
R9254:9257 LF.Poly <> list ind
R9259:9259 LF.Tactics <> X var
R9285:9290 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9306:9311 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9313:9315 Coq.Init.Logic <> :type_scope:x_'='_x not
R9312:9312 LF.Tactics <> x var
R9316:9316 LF.Tactics <> y var
R9297:9299 Coq.Init.Logic <> :type_scope:x_'='_x not
R9292:9295 LF.Poly <> ::x_'::'_x not
R9291:9291 LF.Tactics <> y var
R9296:9296 LF.Tactics <> l var
R9301:9304 LF.Poly <> ::x_'::'_x not
R9300:9300 LF.Tactics <> x var
R9305:9305 LF.Tactics <> j var
R9276:9278 Coq.Init.Logic <> :type_scope:x_'='_x not
R9266:9269 LF.Poly <> ::x_'::'_x not
R9265:9265 LF.Tactics <> x var
R9271:9274 LF.Poly <> ::x_'::'_x not
R9270:9270 LF.Tactics <> y var
R9275:9275 LF.Tactics <> l var
R9280:9283 LF.Poly <> ::x_'::'_x not
R9279:9279 LF.Tactics <> z var
R9284:9284 LF.Tactics <> j var
prf 10133:10139 <> eqb_0_l
R10169:10172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10174:10176 Coq.Init.Logic <> :type_scope:x_'='_x not
R10173:10173 LF.Tactics <> n var
R10162:10164 Coq.Init.Logic <> :type_scope:x_'='_x not
R10157:10160 LF.Basics <> :nat_scope:x_'=?'_x not
R10161:10161 LF.Tactics <> n var
R10165:10168 LF.Basics <> true constr
prf 10969:10984 <> discriminate_ex1
R11000:11002 Coq.Init.Datatypes <> nat ind
R11015:11020 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11026:11028 Coq.Init.Logic <> :type_scope:x_'='_x not
R11022:11024 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R11011:11013 Coq.Init.Logic <> :type_scope:x_'='_x not
R11008:11008 Coq.Init.Datatypes <> S constr
R11010:11010 LF.Tactics <> n var
R11014:11014 Coq.Init.Datatypes <> O constr
prf 11093:11108 <> discriminate_ex2
R11126:11128 Coq.Init.Datatypes <> nat ind
R11146:11151 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11155:11157 Coq.Init.Logic <> :type_scope:x_'='_x not
R11152:11152 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11154:11154 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11153:11153 LF.Tactics <> n var
R11158:11158 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11160:11160 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R11159:11159 LF.Tactics <> m var
R11139:11141 Coq.Init.Logic <> :type_scope:x_'='_x not
R11134:11138 LF.Basics <> false constr
R11142:11145 LF.Basics <> true constr
def 11681:11696 <> discriminate_ex3
R11729:11729 LF.Tactics <> X var
R11739:11742 LF.Poly <> list ind
R11744:11744 LF.Tactics <> X var
R11768:11775 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11777:11779 Coq.Init.Logic <> :type_scope:x_'='_x not
R11776:11776 LF.Tactics <> x var
R11780:11780 LF.Tactics <> z var
R11763:11765 Coq.Init.Logic <> :type_scope:x_'='_x not
R11753:11756 LF.Poly <> ::x_'::'_x not
R11752:11752 LF.Tactics <> x var
R11758:11761 LF.Poly <> ::x_'::'_x not
R11757:11757 LF.Tactics <> y var
R11762:11762 LF.Tactics <> l var
R11766:11767 LF.Poly <> ::'['_']' not
prf 12143:12149 <> f_equal
R12178:12181 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12182:12182 LF.Tactics <> B var
R12177:12177 LF.Tactics <> A var
R12191:12191 LF.Tactics <> A var
R12202:12205 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12209:12211 Coq.Init.Logic <> :type_scope:x_'='_x not
R12206:12206 LF.Tactics <> f var
R12208:12208 LF.Tactics <> x var
R12212:12212 LF.Tactics <> f var
R12214:12214 LF.Tactics <> y var
R12198:12200 Coq.Init.Logic <> :type_scope:x_'='_x not
R12197:12197 LF.Tactics <> x var
R12201:12201 LF.Tactics <> y var
prf 12717:12721 <> S_inj
R12739:12741 Coq.Init.Datatypes <> nat ind
R12749:12752 LF.Basics <> bool ind
R12779:12788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12795:12797 Coq.Init.Logic <> :type_scope:x_'='_x not
R12790:12793 LF.Basics <> :nat_scope:x_'=?'_x not
R12789:12789 LF.Tactics <> n var
R12794:12794 LF.Tactics <> m var
R12798:12798 LF.Tactics <> b var
R12775:12777 Coq.Init.Logic <> :type_scope:x_'='_x not
R12761:12761 LF.Basics <> :nat_scope:x_'=?'_x not
R12765:12770 LF.Basics <> :nat_scope:x_'=?'_x not
R12774:12774 LF.Basics <> :nat_scope:x_'=?'_x not
R12762:12762 Coq.Init.Datatypes <> S constr
R12764:12764 LF.Tactics <> n var
R12771:12771 Coq.Init.Datatypes <> S constr
R12773:12773 LF.Tactics <> m var
R12778:12778 LF.Tactics <> b var
prf 13624:13630 <> silly3'
R13646:13648 Coq.Init.Datatypes <> nat ind
R13654:13654 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13693:13699 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13715:13721 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13726:13729 Coq.Init.Logic <> :type_scope:x_'='_x not
R13744:13744 Coq.Init.Logic <> :type_scope:x_'='_x not
R13722:13725 LF.Basics <> true constr
R13730:13730 LF.Basics <> :nat_scope:x_'=?'_x not
R13738:13742 LF.Basics <> :nat_scope:x_'=?'_x not
R13731:13731 Coq.Init.Datatypes <> S constr
R13734:13734 Coq.Init.Datatypes <> S constr
R13736:13736 LF.Tactics <> n var
R13704:13707 Coq.Init.Logic <> :type_scope:x_'='_x not
R13714:13714 Coq.Init.Logic <> :type_scope:x_'='_x not
R13700:13703 LF.Basics <> true constr
R13709:13712 LF.Basics <> :nat_scope:x_'=?'_x not
R13708:13708 LF.Tactics <> n var
R13668:13671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13686:13688 Coq.Init.Logic <> :type_scope:x_'='_x not
R13672:13672 LF.Basics <> :nat_scope:x_'=?'_x not
R13680:13684 LF.Basics <> :nat_scope:x_'=?'_x not
R13673:13673 Coq.Init.Datatypes <> S constr
R13676:13676 Coq.Init.Datatypes <> S constr
R13678:13678 LF.Tactics <> n var
R13689:13692 LF.Basics <> true constr
R13661:13663 Coq.Init.Logic <> :type_scope:x_'='_x not
R13656:13659 LF.Basics <> :nat_scope:x_'=?'_x not
R13655:13655 LF.Tactics <> n var
R13664:13667 LF.Basics <> true constr
prf 14629:14646 <> plus_n_n_injective
R14680:14688 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14690:14692 Coq.Init.Logic <> :type_scope:x_'='_x not
R14689:14689 LF.Tactics <> n var
R14693:14693 LF.Tactics <> m var
R14672:14674 Coq.Init.Logic <> :type_scope:x_'='_x not
R14668:14670 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14667:14667 LF.Tactics <> n var
R14671:14671 LF.Tactics <> n var
R14676:14678 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14675:14675 LF.Tactics <> m var
R14679:14679 LF.Tactics <> m var
R14898:14906 LF.Induction <> plus_n_Sm thm
R14898:14906 LF.Induction <> plus_n_Sm thm
R14898:14906 LF.Induction <> plus_n_Sm thm
R14931:14939 LF.Induction <> plus_comm thm
R14931:14939 LF.Induction <> plus_comm thm
R14931:14939 LF.Induction <> plus_comm thm
R14964:14972 LF.Induction <> plus_n_Sm thm
R14964:14972 LF.Induction <> plus_n_Sm thm
R14964:14972 LF.Induction <> plus_n_Sm thm
R14997:15005 LF.Induction <> plus_n_Sm thm
R14997:15005 LF.Induction <> plus_n_Sm thm
R14997:15005 LF.Induction <> plus_n_Sm thm
prf 15992:16014 <> double_injective_FAILED
R16054:16062 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16064:16066 Coq.Init.Logic <> :type_scope:x_'='_x not
R16063:16063 LF.Tactics <> n var
R16067:16067 LF.Tactics <> m var
R16043:16045 Coq.Init.Logic <> :type_scope:x_'='_x not
R16035:16040 LF.Induction <> double def
R16042:16042 LF.Tactics <> n var
R16046:16051 LF.Induction <> double def
R16053:16053 LF.Tactics <> m var
R16365:16371 LF.Tactics <> f_equal thm
R16365:16371 LF.Tactics <> f_equal thm
prf 18608:18623 <> double_injective
R18663:18671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18673:18675 Coq.Init.Logic <> :type_scope:x_'='_x not
R18672:18672 LF.Tactics <> n var
R18676:18676 LF.Tactics <> m var
R18652:18654 Coq.Init.Logic <> :type_scope:x_'='_x not
R18644:18649 LF.Induction <> double def
R18651:18651 LF.Tactics <> n var
R18655:18660 LF.Induction <> double def
R18662:18662 LF.Tactics <> m var
R19567:19573 LF.Tactics <> f_equal thm
R19567:19573 LF.Tactics <> f_equal thm
prf 20508:20515 <> eqb_true
R20548:20551 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20553:20555 Coq.Init.Logic <> :type_scope:x_'='_x not
R20552:20552 LF.Tactics <> n var
R20556:20556 LF.Tactics <> m var
R20541:20543 Coq.Init.Logic <> :type_scope:x_'='_x not
R20536:20539 LF.Basics <> :nat_scope:x_'=?'_x not
R20535:20535 LF.Tactics <> n var
R20540:20540 LF.Tactics <> m var
R20544:20547 LF.Basics <> true constr
def 21546:21576 <> manual_grade_for_informal_proof
R21580:21585 Coq.Init.Datatypes <> option ind
R21591:21591 LF.Poly <> :type_scope:x_'*'_x not
R21588:21590 Coq.Init.Datatypes <> nat ind
R21592:21597 Coq.Strings.String <> string ind
R21603:21606 Coq.Init.Datatypes <> None constr
prf 21938:21966 <> double_injective_take2_FAILED
R22006:22014 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22016:22018 Coq.Init.Logic <> :type_scope:x_'='_x not
R22015:22015 LF.Tactics <> n var
R22019:22019 LF.Tactics <> m var
R21995:21997 Coq.Init.Logic <> :type_scope:x_'='_x not
R21987:21992 LF.Induction <> double def
R21994:21994 LF.Tactics <> n var
R21998:22003 LF.Induction <> double def
R22005:22005 LF.Tactics <> m var
R22317:22323 LF.Tactics <> f_equal thm
R22317:22323 LF.Tactics <> f_equal thm
prf 23259:23280 <> double_injective_take2
R23320:23328 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23330:23332 Coq.Init.Logic <> :type_scope:x_'='_x not
R23329:23329 LF.Tactics <> n var
R23333:23333 LF.Tactics <> m var
R23309:23311 Coq.Init.Logic <> :type_scope:x_'='_x not
R23301:23306 LF.Induction <> double def
R23308:23308 LF.Tactics <> n var
R23312:23317 LF.Induction <> double def
R23319:23319 LF.Tactics <> m var
R23814:23820 LF.Tactics <> f_equal thm
R23814:23820 LF.Tactics <> f_equal thm
prf 26025:26035 <> eqb_id_true
R26070:26073 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26075:26077 Coq.Init.Logic <> :type_scope:x_'='_x not
R26074:26074 LF.Tactics <> x var
R26078:26078 LF.Tactics <> y var
R26063:26065 Coq.Init.Logic <> :type_scope:x_'='_x not
R26053:26058 LF.Lists <> eqb_id def
R26062:26062 LF.Tactics <> y var
R26060:26060 LF.Tactics <> x var
R26066:26069 LF.Basics <> true constr
R26139:26141 Coq.Init.Logic <> :type_scope:x_'='_x not
R26139:26141 Coq.Init.Logic <> :type_scope:x_'='_x not
R26154:26161 LF.Tactics <> eqb_true thm
R26154:26161 LF.Tactics <> eqb_true thm
prf 26328:26347 <> nth_error_after_last
R26362:26364 Coq.Init.Datatypes <> nat ind
R26383:26386 LF.Poly <> list ind
R26388:26388 LF.Tactics <> X var
R26409:26417 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26431:26433 Coq.Init.Logic <> :type_scope:x_'='_x not
R26418:26426 LF.Poly <> nth_error def
R26430:26430 LF.Tactics <> n var
R26428:26428 LF.Tactics <> l var
R26434:26437 Coq.Init.Datatypes <> None constr
R26405:26407 Coq.Init.Logic <> :type_scope:x_'='_x not
R26397:26402 LF.Poly <> length def
R26404:26404 LF.Tactics <> l var
R26408:26408 LF.Tactics <> n var
def 26956:26961 <> square
R26969:26971 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R26968:26968 LF.Tactics <> n var
R26972:26972 LF.Tactics <> n var
prf 27043:27053 <> square_mult
R27083:27085 Coq.Init.Logic <> :type_scope:x_'='_x not
R27069:27074 LF.Tactics <> square def
R27078:27080 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27077:27077 LF.Tactics <> n var
R27081:27081 LF.Tactics <> m var
R27094:27096 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27086:27091 LF.Tactics <> square def
R27093:27093 LF.Tactics <> n var
R27097:27102 LF.Tactics <> square def
R27104:27104 LF.Tactics <> m var
R27430:27435 LF.Tactics <> square def
R27754:27763 LF.Induction <> mult_assoc thm
R27754:27763 LF.Induction <> mult_assoc thm
R27754:27763 LF.Induction <> mult_assoc thm
R27789:27791 Coq.Init.Logic <> :type_scope:x_'='_x not
R27785:27787 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27781:27783 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27797:27799 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27793:27795 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27789:27791 Coq.Init.Logic <> :type_scope:x_'='_x not
R27785:27787 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27781:27783 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27797:27799 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27793:27795 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27818:27826 LF.Induction <> mult_comm thm
R27818:27826 LF.Induction <> mult_comm thm
R27818:27826 LF.Induction <> mult_comm thm
R27835:27844 LF.Induction <> mult_assoc thm
R27835:27844 LF.Induction <> mult_assoc thm
R27870:27879 LF.Induction <> mult_assoc thm
R27870:27879 LF.Induction <> mult_assoc thm
R27870:27879 LF.Induction <> mult_assoc thm
def 28262:28264 <> foo
R28270:28272 Coq.Init.Datatypes <> nat ind
prf 28494:28505 <> silly_fact_1
R28528:28530 Coq.Init.Logic <> :type_scope:x_'='_x not
R28524:28526 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28519:28521 LF.Tactics <> foo def
R28523:28523 LF.Tactics <> m var
R28542:28544 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28531:28533 LF.Tactics <> foo def
R28537:28539 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28536:28536 LF.Tactics <> m var
def 28777:28779 <> bar
R28794:28794 LF.Tactics <> x var
R28805:28805 Coq.Init.Datatypes <> O constr
R28816:28816 Coq.Init.Datatypes <> S constr
prf 28890:28908 <> silly_fact_2_FAILED
R28931:28933 Coq.Init.Logic <> :type_scope:x_'='_x not
R28927:28929 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28922:28924 LF.Tactics <> bar def
R28926:28926 LF.Tactics <> m var
R28945:28947 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28934:28936 LF.Tactics <> bar def
R28940:28942 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28939:28939 LF.Tactics <> m var
prf 29934:29945 <> silly_fact_2
R29968:29970 Coq.Init.Logic <> :type_scope:x_'='_x not
R29964:29966 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29959:29961 LF.Tactics <> bar def
R29963:29963 LF.Tactics <> m var
R29982:29984 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29971:29973 LF.Tactics <> bar def
R29977:29979 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29976:29976 LF.Tactics <> m var
prf 30341:30353 <> silly_fact_2'
R30376:30378 Coq.Init.Logic <> :type_scope:x_'='_x not
R30372:30374 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30367:30369 LF.Tactics <> bar def
R30371:30371 LF.Tactics <> m var
R30390:30392 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30379:30381 LF.Tactics <> bar def
R30385:30387 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30384:30384 LF.Tactics <> m var
R30424:30426 LF.Tactics <> bar def
def 31076:31083 <> sillyfun
R31090:31092 Coq.Init.Datatypes <> nat ind
R31097:31100 LF.Basics <> bool ind
R31111:31114 LF.Basics <> :nat_scope:x_'=?'_x not
R31110:31110 LF.Tactics <> n var
R31139:31142 LF.Basics <> :nat_scope:x_'=?'_x not
R31138:31138 LF.Tactics <> n var
R31163:31167 LF.Basics <> false constr
R31150:31154 LF.Basics <> false constr
R31122:31126 LF.Basics <> false constr
prf 31179:31192 <> sillyfun_false
R31208:31210 Coq.Init.Datatypes <> nat ind
R31226:31228 Coq.Init.Logic <> :type_scope:x_'='_x not
R31216:31223 LF.Tactics <> sillyfun def
R31225:31225 LF.Tactics <> n var
R31229:31233 LF.Basics <> false constr
R31262:31269 LF.Tactics <> sillyfun def
R31285:31288 LF.Basics <> :nat_scope:x_'=?'_x not
R31285:31288 LF.Basics <> :nat_scope:x_'=?'_x not
R31377:31380 LF.Basics <> :nat_scope:x_'=?'_x not
R31377:31380 LF.Basics <> :nat_scope:x_'=?'_x not
def 32265:32269 <> split
R32289:32292 LF.Poly <> list ind
R32296:32296 LF.Poly <> :type_scope:x_'*'_x not
R32295:32295 LF.Tactics <> X var
R32297:32297 LF.Tactics <> Y var
R32318:32318 LF.Poly <> :type_scope:x_'*'_x not
R32325:32329 LF.Poly <> :type_scope:x_'*'_x not
R32336:32336 LF.Poly <> :type_scope:x_'*'_x not
R32319:32322 LF.Poly <> list ind
R32324:32324 LF.Tactics <> X var
R32330:32333 LF.Poly <> list ind
R32335:32335 LF.Tactics <> Y var
R32349:32349 LF.Tactics <> l var
R32360:32361 LF.Poly <> ::'['_']' not
R32366:32366 LF.Poly <> ::'('_x_','_x_')' not
R32369:32370 LF.Poly <> ::'('_x_','_x_')' not
R32373:32373 LF.Poly <> ::'('_x_','_x_')' not
R32367:32368 LF.Poly <> ::'['_']' not
R32371:32372 LF.Poly <> ::'['_']' not
R32385:32388 LF.Poly <> ::x_'::'_x not
R32379:32379 LF.Poly <> ::'('_x_','_x_')' not
R32381:32382 LF.Poly <> ::'('_x_','_x_')' not
R32384:32384 LF.Poly <> ::'('_x_','_x_')' not
R32406:32410 LF.Tactics <> split def
R32427:32427 LF.Poly <> ::'('_x_','_x_')' not
R32430:32431 LF.Poly <> ::'('_x_','_x_')' not
R32434:32434 LF.Poly <> ::'('_x_','_x_')' not
R32439:32439 LF.Poly <> ::'('_x_','_x_')' not
R32447:32448 LF.Poly <> ::'('_x_','_x_')' not
R32456:32456 LF.Poly <> ::'('_x_','_x_')' not
R32441:32444 LF.Poly <> ::x_'::'_x not
R32450:32453 LF.Poly <> ::x_'::'_x not
prf 32564:32581 <> surjective_pairing
R32609:32611 LF.Poly <> :type_scope:x_'*'_x not
R32608:32608 LF.Tactics <> A var
R32612:32612 LF.Tactics <> B var
R32617:32619 Coq.Init.Logic <> :type_scope:x_'='_x not
R32616:32616 LF.Tactics <> p var
R32620:32620 LF.Poly <> ::'('_x_','_x_')' not
R32626:32627 LF.Poly <> ::'('_x_','_x_')' not
R32633:32633 LF.Poly <> ::'('_x_','_x_')' not
R32621:32623 LF.Poly <> fst def
R32625:32625 LF.Tactics <> p var
R32628:32630 LF.Poly <> snd def
R32632:32632 LF.Tactics <> p var
prf 32716:32719 <> lem1
R32738:32741 LF.Poly <> list ind
R32745:32745 LF.Poly <> :type_scope:x_'*'_x not
R32744:32744 LF.Tactics <> X var
R32746:32746 LF.Tactics <> Y var
R32758:32760 Coq.Init.Logic <> :type_scope:x_'='_x not
R32751:32755 LF.Tactics <> split def
R32757:32757 LF.Tactics <> l var
R32761:32761 LF.Poly <> ::'('_x_','_x_')' not
R32775:32776 LF.Poly <> ::'('_x_','_x_')' not
R32790:32790 LF.Poly <> ::'('_x_','_x_')' not
R32762:32764 LF.Poly <> fst def
R32767:32771 LF.Tactics <> split def
R32773:32773 LF.Tactics <> l var
R32777:32779 LF.Poly <> snd def
R32782:32786 LF.Tactics <> split def
R32788:32788 LF.Tactics <> l var
R32825:32842 LF.Tactics <> surjective_pairing thm
R32825:32842 LF.Tactics <> surjective_pairing thm
R32825:32842 LF.Tactics <> surjective_pairing thm
prf 32872:32884 <> combine_split
R32904:32907 LF.Poly <> list ind
R32911:32913 LF.Poly <> :type_scope:x_'*'_x not
R32910:32910 LF.Tactics <> X var
R32914:32914 LF.Tactics <> Y var
R32945:32950 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32964:32966 Coq.Init.Logic <> :type_scope:x_'='_x not
R32951:32957 LF.Poly <> combine def
R32962:32963 LF.Tactics <> l2 var
R32959:32960 LF.Tactics <> l1 var
R32967:32967 LF.Tactics <> l var
R32934:32936 Coq.Init.Logic <> :type_scope:x_'='_x not
R32927:32931 LF.Tactics <> split def
R32933:32933 LF.Tactics <> l var
R32937:32937 LF.Poly <> ::'('_x_','_x_')' not
R32940:32941 LF.Poly <> ::'('_x_','_x_')' not
R32944:32944 LF.Poly <> ::'('_x_','_x_')' not
R32938:32939 LF.Tactics <> l1 var
R32942:32943 LF.Tactics <> l2 var
R33012:33015 LF.Tactics <> lem1 thm
R33012:33015 LF.Tactics <> lem1 thm
R33012:33015 LF.Tactics <> lem1 thm
R33169:33173 LF.Tactics <> split def
R33169:33173 LF.Tactics <> split def
def 33772:33780 <> sillyfun1
R33787:33789 Coq.Init.Datatypes <> nat ind
R33794:33797 LF.Basics <> bool ind
R33808:33811 LF.Basics <> :nat_scope:x_'=?'_x not
R33807:33807 LF.Tactics <> n var
R33835:33838 LF.Basics <> :nat_scope:x_'=?'_x not
R33834:33834 LF.Tactics <> n var
R33858:33862 LF.Basics <> false constr
R33846:33849 LF.Basics <> true constr
R33819:33822 LF.Basics <> true constr
prf 34088:34107 <> sillyfun1_odd_FAILED
R34123:34125 Coq.Init.Datatypes <> nat ind
R34152:34160 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34167:34169 Coq.Init.Logic <> :type_scope:x_'='_x not
R34161:34164 LF.Basics <> oddb def
R34166:34166 LF.Tactics <> n var
R34170:34173 LF.Basics <> true constr
R34145:34147 Coq.Init.Logic <> :type_scope:x_'='_x not
R34134:34142 LF.Tactics <> sillyfun1 def
R34144:34144 LF.Tactics <> n var
R34148:34151 LF.Basics <> true constr
R34205:34213 LF.Tactics <> sillyfun1 def
R34235:34238 LF.Basics <> :nat_scope:x_'=?'_x not
R34235:34238 LF.Basics <> :nat_scope:x_'=?'_x not
prf 35038:35050 <> sillyfun1_odd
R35066:35068 Coq.Init.Datatypes <> nat ind
R35095:35103 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35110:35112 Coq.Init.Logic <> :type_scope:x_'='_x not
R35104:35107 LF.Basics <> oddb def
R35109:35109 LF.Tactics <> n var
R35113:35116 LF.Basics <> true constr
R35088:35090 Coq.Init.Logic <> :type_scope:x_'='_x not
R35077:35085 LF.Tactics <> sillyfun1 def
R35087:35087 LF.Tactics <> n var
R35091:35094 LF.Basics <> true constr
R35148:35156 LF.Tactics <> sillyfun1 def
R35178:35181 LF.Basics <> :nat_scope:x_'=?'_x not
R35178:35181 LF.Basics <> :nat_scope:x_'=?'_x not
R35427:35434 LF.Tactics <> eqb_true thm
R35427:35434 LF.Tactics <> eqb_true thm
R35725:35728 LF.Basics <> :nat_scope:x_'=?'_x not
R35725:35728 LF.Basics <> :nat_scope:x_'=?'_x not
R35785:35792 LF.Tactics <> eqb_true thm
R35785:35792 LF.Tactics <> eqb_true thm
prf 35969:35990 <> bool_fn_applied_thrice
R36012:36015 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36016:36019 LF.Basics <> bool ind
R36008:36011 LF.Basics <> bool ind
R36027:36030 LF.Basics <> bool ind
R36047:36049 Coq.Init.Logic <> :type_scope:x_'='_x not
R36036:36036 LF.Tactics <> f var
R36039:36039 LF.Tactics <> f var
R36042:36042 LF.Tactics <> f var
R36044:36044 LF.Tactics <> b var
R36050:36050 LF.Tactics <> f var
R36052:36052 LF.Tactics <> b var
R36119:36122 LF.Basics <> true constr
R36119:36122 LF.Basics <> true constr
R36203:36207 LF.Basics <> false constr
R36203:36207 LF.Basics <> false constr
R36314:36318 LF.Basics <> false constr
R36314:36318 LF.Basics <> false constr
R36351:36354 LF.Basics <> true constr
R36351:36354 LF.Basics <> true constr
prf 38936:38942 <> eqb_sym
R38960:38962 Coq.Init.Datatypes <> nat ind
R38968:38968 Coq.Init.Logic <> :type_scope:x_'='_x not
R38975:38979 Coq.Init.Logic <> :type_scope:x_'='_x not
R38986:38986 Coq.Init.Logic <> :type_scope:x_'='_x not
R38970:38973 LF.Basics <> :nat_scope:x_'=?'_x not
R38969:38969 LF.Tactics <> n var
R38974:38974 LF.Tactics <> m var
R38981:38984 LF.Basics <> :nat_scope:x_'=?'_x not
R38980:38980 LF.Tactics <> m var
R38985:38985 LF.Tactics <> n var
prf 39768:39779 <> eqb_true_rev
R39795:39797 Coq.Init.Datatypes <> nat ind
R39805:39808 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39809:39809 Coq.Init.Logic <> :type_scope:x_'='_x not
R39816:39819 Coq.Init.Logic <> :type_scope:x_'='_x not
R39811:39814 LF.Basics <> :nat_scope:x_'=?'_x not
R39810:39810 LF.Tactics <> n var
R39815:39815 LF.Tactics <> m var
R39820:39823 LF.Basics <> true constr
R39801:39803 Coq.Init.Logic <> :type_scope:x_'='_x not
R39800:39800 LF.Tactics <> n var
R39804:39804 LF.Tactics <> m var
prf 40000:40008 <> eqb_trans
R40041:40046 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40060:40065 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40072:40074 Coq.Init.Logic <> :type_scope:x_'='_x not
R40067:40070 LF.Basics <> :nat_scope:x_'=?'_x not
R40066:40066 LF.Tactics <> n var
R40071:40071 LF.Tactics <> p var
R40075:40078 LF.Basics <> true constr
R40053:40055 Coq.Init.Logic <> :type_scope:x_'='_x not
R40048:40051 LF.Basics <> :nat_scope:x_'=?'_x not
R40047:40047 LF.Tactics <> m var
R40052:40052 LF.Tactics <> p var
R40056:40059 LF.Basics <> true constr
R40034:40036 Coq.Init.Logic <> :type_scope:x_'='_x not
R40029:40032 LF.Basics <> :nat_scope:x_'=?'_x not
R40028:40028 LF.Tactics <> n var
R40033:40033 LF.Tactics <> m var
R40037:40040 LF.Basics <> true constr
R40127:40129 Coq.Init.Logic <> :type_scope:x_'='_x not
R40122:40125 LF.Basics <> :nat_scope:x_'=?'_x not
R40130:40133 LF.Basics <> true constr
R40145:40152 LF.Tactics <> eqb_true thm
R40145:40152 LF.Tactics <> eqb_true thm
R40169:40176 LF.Tactics <> eqb_true thm
R40169:40176 LF.Tactics <> eqb_true thm
R40193:40204 LF.Tactics <> eqb_true_rev thm
R40193:40204 LF.Tactics <> eqb_true_rev thm
R40215:40222 LF.Tactics <> trans_eq thm
R40215:40222 LF.Tactics <> trans_eq thm
def 40969:40991 <> split_combine_statement
R41118:41121 LF.Poly <> list ind
R41123:41123 LF.Tactics <> X var
R41131:41134 LF.Poly <> list ind
R41136:41136 LF.Tactics <> Y var
R41166:41169 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41191:41193 Coq.Init.Logic <> :type_scope:x_'='_x not
R41170:41174 LF.Tactics <> split def
R41177:41183 LF.Poly <> combine def
R41188:41189 LF.Tactics <> l2 var
R41185:41186 LF.Tactics <> l1 var
R41194:41194 LF.Poly <> ::'('_x_','_x_')' not
R41197:41197 LF.Poly <> ::'('_x_','_x_')' not
R41200:41200 LF.Poly <> ::'('_x_','_x_')' not
R41195:41196 LF.Tactics <> l1 var
R41198:41199 LF.Tactics <> l2 var
R41154:41156 Coq.Init.Logic <> :type_scope:x_'='_x not
R41145:41150 LF.Poly <> length def
R41152:41153 LF.Tactics <> l1 var
R41157:41162 LF.Poly <> length def
R41164:41165 LF.Tactics <> l2 var
prf 41212:41224 <> split_combine
R41228:41250 LF.Tactics <> split_combine_statement def
def 41586:41615 <> manual_grade_for_split_combine
R41619:41624 Coq.Init.Datatypes <> option ind
R41630:41630 LF.Poly <> :type_scope:x_'*'_x not
R41627:41629 Coq.Init.Datatypes <> nat ind
R41631:41636 Coq.Strings.String <> string ind
R41642:41645 Coq.Init.Datatypes <> None constr
prf 41825:41839 <> filter_exercise
R41870:41873 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41874:41877 LF.Basics <> bool ind
R41869:41869 LF.Tactics <> X var
R41914:41914 LF.Tactics <> X var
R41925:41928 LF.Poly <> list ind
R41930:41930 LF.Tactics <> X var
R41962:41970 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41977:41979 Coq.Init.Logic <> :type_scope:x_'='_x not
R41971:41974 LF.Tactics <> test var
R41976:41976 LF.Tactics <> x var
R41980:41983 LF.Basics <> true constr
R41952:41954 Coq.Init.Logic <> :type_scope:x_'='_x not
R41939:41944 LF.Poly <> filter def
R41951:41951 LF.Tactics <> l var
R41946:41949 LF.Tactics <> test var
R41956:41959 LF.Poly <> ::x_'::'_x not
R41955:41955 LF.Tactics <> x var
R41960:41961 LF.Tactics <> lf var
def 43154:43160 <> forallb
R43182:43185 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43186:43189 LF.Basics <> bool ind
R43181:43181 LF.Tactics <> X var
R43197:43200 LF.Poly <> list ind
R43202:43202 LF.Tactics <> X var
R43207:43210 LF.Basics <> bool ind
R43223:43223 LF.Tactics <> l var
R43235:43237 LF.Poly <> nil constr
R43242:43245 LF.Basics <> true constr
R43252:43255 LF.Poly <> ::x_'::'_x not
R43266:43269 LF.Tactics <> test var
R43300:43304 LF.Basics <> false constr
R43279:43285 LF.Tactics <> forallb def
R43287:43290 LF.Tactics <> test var
def 43325:43338 <> test_forallb_1
R43366:43368 Coq.Init.Logic <> :type_scope:x_'='_x not
R43342:43348 LF.Tactics <> forallb def
R43355:43355 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43357:43357 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43359:43359 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43361:43361 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43363:43363 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43365:43365 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43350:43353 LF.Basics <> oddb def
R43369:43372 LF.Basics <> true constr
def 43409:43422 <> test_forallb_2
R43452:43454 Coq.Init.Logic <> :type_scope:x_'='_x not
R43426:43432 LF.Tactics <> forallb def
R43439:43439 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43445:43445 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43451:43451 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43446:43450 LF.Basics <> false constr
R43440:43444 LF.Basics <> false constr
R43434:43437 LF.Basics <> negb def
R43455:43458 LF.Basics <> true constr
def 43495:43508 <> test_forallb_3
R43535:43537 Coq.Init.Logic <> :type_scope:x_'='_x not
R43512:43518 LF.Tactics <> forallb def
R43526:43526 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43528:43528 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43530:43530 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43532:43532 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43534:43534 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43520:43524 LF.Basics <> evenb def
R43538:43542 LF.Basics <> false constr
def 43579:43592 <> test_forallb_4
R43614:43616 Coq.Init.Logic <> :type_scope:x_'='_x not
R43596:43602 LF.Tactics <> forallb def
R43612:43613 LF.Poly <> ::'['_']' not
R43605:43607 LF.Basics <> eqb def
R43617:43620 LF.Basics <> true constr
def 43658:43664 <> existsb
R43686:43689 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43690:43693 LF.Basics <> bool ind
R43685:43685 LF.Tactics <> X var
R43701:43704 LF.Poly <> list ind
R43706:43706 LF.Tactics <> X var
R43711:43714 LF.Basics <> bool ind
R43727:43727 LF.Tactics <> l var
R43740:43742 LF.Poly <> nil constr
R43747:43751 LF.Basics <> false constr
R43758:43761 LF.Poly <> ::x_'::'_x not
R43772:43775 LF.Tactics <> test var
R43795:43801 LF.Tactics <> existsb def
R43803:43806 LF.Tactics <> test var
R43785:43788 LF.Basics <> true constr
def 43828:43841 <> test_existsb_1
R43870:43872 Coq.Init.Logic <> :type_scope:x_'='_x not
R43845:43851 LF.Tactics <> existsb def
R43861:43861 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43863:43863 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43865:43865 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43867:43867 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43869:43869 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43854:43856 LF.Basics <> eqb def
R43873:43877 LF.Basics <> false constr
def 43914:43927 <> test_existsb_2
R43968:43970 Coq.Init.Logic <> :type_scope:x_'='_x not
R43931:43937 LF.Tactics <> existsb def
R43951:43951 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43956:43956 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43961:43961 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43967:43967 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43962:43966 LF.Basics <> false constr
R43957:43960 LF.Basics <> true constr
R43952:43955 LF.Basics <> true constr
R43940:43943 LF.Basics <> andb def
R43945:43948 LF.Basics <> true constr
R43971:43974 LF.Basics <> true constr
def 44011:44024 <> test_existsb_3
R44054:44056 Coq.Init.Logic <> :type_scope:x_'='_x not
R44028:44034 LF.Tactics <> existsb def
R44041:44041 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R44043:44043 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R44045:44045 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R44047:44047 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R44049:44049 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R44051:44051 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R44053:44053 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R44036:44039 LF.Basics <> oddb def
R44057:44060 LF.Basics <> true constr
def 44097:44110 <> test_existsb_4
R44130:44132 Coq.Init.Logic <> :type_scope:x_'='_x not
R44114:44120 LF.Tactics <> existsb def
R44128:44129 LF.Poly <> ::'['_']' not
R44122:44126 LF.Basics <> evenb def
R44133:44137 LF.Basics <> false constr
def 44177:44184 <> existsb'
R44206:44209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44210:44213 LF.Basics <> bool ind
R44205:44205 LF.Tactics <> X var
R44221:44224 LF.Poly <> list ind
R44226:44226 LF.Tactics <> X var
R44231:44234 LF.Basics <> bool ind
R44241:44244 LF.Basics <> negb def
R44247:44253 LF.Tactics <> forallb def
R44279:44279 LF.Tactics <> l var
R44265:44268 LF.Basics <> negb def
R44270:44273 LF.Tactics <> test var
R44275:44275 LF.Tactics <> x var
prf 44292:44307 <> existsb_existsb'
R44338:44341 Coq.Init.Logic <> :type_scope:x_'->'_x not
R44342:44345 LF.Basics <> bool ind
R44337:44337 LF.Tactics <> X var
R44353:44356 LF.Poly <> list ind
R44358:44358 LF.Tactics <> X var
R44378:44380 Coq.Init.Logic <> :type_scope:x_'='_x not
R44364:44370 LF.Tactics <> existsb def
R44377:44377 LF.Tactics <> l var
R44372:44375 LF.Tactics <> test var
R44381:44388 LF.Tactics <> existsb' def
R44395:44395 LF.Tactics <> l var
R44390:44393 LF.Tactics <> test var
R44452:44459 LF.Tactics <> existsb' def
R44486:44493 LF.Tactics <> existsb' def
